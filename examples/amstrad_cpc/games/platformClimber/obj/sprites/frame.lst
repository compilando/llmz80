                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module frame
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _cpct_getScreenPtr
                             12 	.globl _cpct_drawSprite
                             13 	.globl _cpct_drawTileAligned4x8
                             14 	.globl _drawFrame
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;src/sprites/frame.c:28: void drawFrame(u8* pscr, u8 x) {
                             47 ;	---------------------------------
                             48 ; Function drawFrame
                             49 ; ---------------------------------
   0000                      50 _drawFrame::
   0000 DD E5         [15]   51 	push	ix
   0002 DD 21 00 00   [14]   52 	ld	ix,#0
   0006 DD 39         [15]   53 	add	ix,sp
   0008 F5            [11]   54 	push	af
                             55 ;src/sprites/frame.c:33: pvmem = cpct_getScreenPtr(pscr, x, 0);
   0009 DD 7E 04      [19]   56 	ld	a, 4 (ix)
   000C DD 77 FE      [19]   57 	ld	-2 (ix), a
   000F DD 7E 05      [19]   58 	ld	a, 5 (ix)
   0012 DD 77 FF      [19]   59 	ld	-1 (ix), a
   0015 AF            [ 4]   60 	xor	a, a
   0016 F5            [11]   61 	push	af
   0017 33            [ 6]   62 	inc	sp
   0018 DD 7E 06      [19]   63 	ld	a, 6 (ix)
   001B F5            [11]   64 	push	af
   001C 33            [ 6]   65 	inc	sp
   001D C1            [10]   66 	pop	bc
   001E E1            [10]   67 	pop	hl
   001F E5            [11]   68 	push	hl
   0020 C5            [11]   69 	push	bc
   0021 E5            [11]   70 	push	hl
   0022 CDr00r00      [17]   71 	call	_cpct_getScreenPtr
                             72 ;src/sprites/frame.c:34: cpct_drawTileAligned4x8(G_frameUpLeftCorner,  pvmem);       // Up-Left
   0025 5D            [ 4]   73 	ld	e, l
   0026 54            [ 4]   74 	ld	d, h
   0027 01r00r00      [10]   75 	ld	bc, #_G_frameUpLeftCorner+0
   002A E5            [11]   76 	push	hl
   002B D5            [11]   77 	push	de
   002C C5            [11]   78 	push	bc
   002D CDr00r00      [17]   79 	call	_cpct_drawTileAligned4x8
   0030 E1            [10]   80 	pop	hl
                             81 ;src/sprites/frame.c:35: cpct_drawTileAligned4x8(G_frameUpRightCorner, pvmem + 54);  // Up-Right
   0031 01 36 00      [10]   82 	ld	bc, #0x0036
   0034 09            [11]   83 	add	hl, bc
   0035 01r00r00      [10]   84 	ld	bc, #_G_frameUpRightCorner+0
   0038 E5            [11]   85 	push	hl
   0039 C5            [11]   86 	push	bc
   003A CDr00r00      [17]   87 	call	_cpct_drawTileAligned4x8
                             88 ;src/sprites/frame.c:38: for(i=8; i < 192; i += 8) {
   003D 06 08         [ 7]   89 	ld	b, #0x08
   003F                      90 00104$:
                             91 ;src/sprites/frame.c:39: pvmem = cpct_getScreenPtr(pscr, x, i);
   003F C5            [11]   92 	push	bc
   0040 C5            [11]   93 	push	bc
   0041 33            [ 6]   94 	inc	sp
   0042 DD 7E 06      [19]   95 	ld	a, 6 (ix)
   0045 F5            [11]   96 	push	af
   0046 33            [ 6]   97 	inc	sp
   0047 DD 6E FE      [19]   98 	ld	l,-2 (ix)
   004A DD 66 FF      [19]   99 	ld	h,-1 (ix)
   004D E5            [11]  100 	push	hl
   004E CDr00r00      [17]  101 	call	_cpct_getScreenPtr
   0051 C1            [10]  102 	pop	bc
                            103 ;src/sprites/frame.c:40: cpct_drawTileAligned4x8(G_frameLeft,  pvmem);      // Left border
   0052 5D            [ 4]  104 	ld	e, l
   0053 54            [ 4]  105 	ld	d, h
   0054 E5            [11]  106 	push	hl
   0055 C5            [11]  107 	push	bc
   0056 D5            [11]  108 	push	de
   0057 11r00r00      [10]  109 	ld	de, #_G_frameLeft
   005A D5            [11]  110 	push	de
   005B CDr00r00      [17]  111 	call	_cpct_drawTileAligned4x8
   005E C1            [10]  112 	pop	bc
   005F E1            [10]  113 	pop	hl
                            114 ;src/sprites/frame.c:41: cpct_drawTileAligned4x8(G_frameRight, pvmem + 54); // Right border
   0060 11 36 00      [10]  115 	ld	de, #0x0036
   0063 19            [11]  116 	add	hl, de
   0064 C5            [11]  117 	push	bc
   0065 E5            [11]  118 	push	hl
   0066 21r00r00      [10]  119 	ld	hl, #_G_frameRight
   0069 E5            [11]  120 	push	hl
   006A CDr00r00      [17]  121 	call	_cpct_drawTileAligned4x8
   006D C1            [10]  122 	pop	bc
                            123 ;src/sprites/frame.c:38: for(i=8; i < 192; i += 8) {
   006E 78            [ 4]  124 	ld	a, b
   006F C6 08         [ 7]  125 	add	a, #0x08
   0071 47            [ 4]  126 	ld	b,a
   0072 D6 C0         [ 7]  127 	sub	a, #0xc0
   0074 38 C9         [12]  128 	jr	C,00104$
                            129 ;src/sprites/frame.c:45: pvmem = cpct_getScreenPtr(pscr, x, 0);
   0076 AF            [ 4]  130 	xor	a, a
   0077 F5            [11]  131 	push	af
   0078 33            [ 6]  132 	inc	sp
   0079 DD 7E 06      [19]  133 	ld	a, 6 (ix)
   007C F5            [11]  134 	push	af
   007D 33            [ 6]  135 	inc	sp
   007E C1            [10]  136 	pop	bc
   007F E1            [10]  137 	pop	hl
   0080 E5            [11]  138 	push	hl
   0081 C5            [11]  139 	push	bc
   0082 E5            [11]  140 	push	hl
   0083 CDr00r00      [17]  141 	call	_cpct_getScreenPtr
   0086 4D            [ 4]  142 	ld	c, l
   0087 44            [ 4]  143 	ld	b, h
                            144 ;src/sprites/frame.c:46: for(i=4; i < 28; i += 4) {
   0088 1E 04         [ 7]  145 	ld	e, #0x04
   008A                     146 00106$:
                            147 ;src/sprites/frame.c:47: pvmem += 4;
   008A 03            [ 6]  148 	inc	bc
   008B 03            [ 6]  149 	inc	bc
   008C 03            [ 6]  150 	inc	bc
   008D 03            [ 6]  151 	inc	bc
                            152 ;src/sprites/frame.c:48: cpct_drawTileAligned4x8(G_frameUp, pvmem);       // Left part 
   008E 69            [ 4]  153 	ld	l, c
   008F 60            [ 4]  154 	ld	h, b
   0090 C5            [11]  155 	push	bc
   0091 D5            [11]  156 	push	de
   0092 E5            [11]  157 	push	hl
   0093 21r00r00      [10]  158 	ld	hl, #_G_frameUp
   0096 E5            [11]  159 	push	hl
   0097 CDr00r00      [17]  160 	call	_cpct_drawTileAligned4x8
   009A D1            [10]  161 	pop	de
   009B C1            [10]  162 	pop	bc
                            163 ;src/sprites/frame.c:49: cpct_drawTileAligned4x8(G_frameUp, pvmem + 26);  // Right part
   009C 21 1A 00      [10]  164 	ld	hl, #0x001a
   009F 09            [11]  165 	add	hl, bc
   00A0 C5            [11]  166 	push	bc
   00A1 D5            [11]  167 	push	de
   00A2 E5            [11]  168 	push	hl
   00A3 21r00r00      [10]  169 	ld	hl, #_G_frameUp
   00A6 E5            [11]  170 	push	hl
   00A7 CDr00r00      [17]  171 	call	_cpct_drawTileAligned4x8
   00AA D1            [10]  172 	pop	de
   00AB C1            [10]  173 	pop	bc
                            174 ;src/sprites/frame.c:46: for(i=4; i < 28; i += 4) {
   00AC 1C            [ 4]  175 	inc	e
   00AD 1C            [ 4]  176 	inc	e
   00AE 1C            [ 4]  177 	inc	e
   00AF 1C            [ 4]  178 	inc	e
   00B0 7B            [ 4]  179 	ld	a, e
   00B1 D6 1C         [ 7]  180 	sub	a, #0x1c
   00B3 38 D5         [12]  181 	jr	C,00106$
                            182 ;src/sprites/frame.c:51: cpct_drawSprite(G_frameUpCenter, pvmem + 2, 6, 8);  // Central tile
   00B5 03            [ 6]  183 	inc	bc
   00B6 03            [ 6]  184 	inc	bc
   00B7 21 06 08      [10]  185 	ld	hl, #0x0806
   00BA E5            [11]  186 	push	hl
   00BB C5            [11]  187 	push	bc
   00BC 21r00r00      [10]  188 	ld	hl, #_G_frameUpCenter
   00BF E5            [11]  189 	push	hl
   00C0 CDr00r00      [17]  190 	call	_cpct_drawSprite
                            191 ;src/sprites/frame.c:54: pvmem = cpct_getScreenPtr(pscr, x, 192);
   00C3 3E C0         [ 7]  192 	ld	a, #0xc0
   00C5 F5            [11]  193 	push	af
   00C6 33            [ 6]  194 	inc	sp
   00C7 DD 7E 06      [19]  195 	ld	a, 6 (ix)
   00CA F5            [11]  196 	push	af
   00CB 33            [ 6]  197 	inc	sp
   00CC C1            [10]  198 	pop	bc
   00CD E1            [10]  199 	pop	hl
   00CE E5            [11]  200 	push	hl
   00CF C5            [11]  201 	push	bc
   00D0 E5            [11]  202 	push	hl
   00D1 CDr00r00      [17]  203 	call	_cpct_getScreenPtr
   00D4 4D            [ 4]  204 	ld	c, l
   00D5 44            [ 4]  205 	ld	b, h
                            206 ;src/sprites/frame.c:55: for(i=4; i < 28; i += 4) {
   00D6 1E 04         [ 7]  207 	ld	e, #0x04
   00D8                     208 00108$:
                            209 ;src/sprites/frame.c:56: pvmem += 4;
   00D8 03            [ 6]  210 	inc	bc
   00D9 03            [ 6]  211 	inc	bc
   00DA 03            [ 6]  212 	inc	bc
   00DB 03            [ 6]  213 	inc	bc
                            214 ;src/sprites/frame.c:57: cpct_drawTileAligned4x8(G_frameDown, pvmem);       // Left part
   00DC 69            [ 4]  215 	ld	l, c
   00DD 60            [ 4]  216 	ld	h, b
   00DE C5            [11]  217 	push	bc
   00DF D5            [11]  218 	push	de
   00E0 E5            [11]  219 	push	hl
   00E1 21r00r00      [10]  220 	ld	hl, #_G_frameDown
   00E4 E5            [11]  221 	push	hl
   00E5 CDr00r00      [17]  222 	call	_cpct_drawTileAligned4x8
   00E8 D1            [10]  223 	pop	de
   00E9 C1            [10]  224 	pop	bc
                            225 ;src/sprites/frame.c:58: cpct_drawTileAligned4x8(G_frameDown, pvmem + 26);  // Right part
   00EA 21 1A 00      [10]  226 	ld	hl, #0x001a
   00ED 09            [11]  227 	add	hl, bc
   00EE C5            [11]  228 	push	bc
   00EF D5            [11]  229 	push	de
   00F0 E5            [11]  230 	push	hl
   00F1 21r00r00      [10]  231 	ld	hl, #_G_frameDown
   00F4 E5            [11]  232 	push	hl
   00F5 CDr00r00      [17]  233 	call	_cpct_drawTileAligned4x8
   00F8 D1            [10]  234 	pop	de
   00F9 C1            [10]  235 	pop	bc
                            236 ;src/sprites/frame.c:55: for(i=4; i < 28; i += 4) {
   00FA 1C            [ 4]  237 	inc	e
   00FB 1C            [ 4]  238 	inc	e
   00FC 1C            [ 4]  239 	inc	e
   00FD 1C            [ 4]  240 	inc	e
   00FE 7B            [ 4]  241 	ld	a, e
   00FF D6 1C         [ 7]  242 	sub	a, #0x1c
   0101 38 D5         [12]  243 	jr	C,00108$
                            244 ;src/sprites/frame.c:60: cpct_drawSprite(G_frameDownCenter, pvmem + 2, 6, 8);  // Central tile
   0103 03            [ 6]  245 	inc	bc
   0104 03            [ 6]  246 	inc	bc
   0105 21 06 08      [10]  247 	ld	hl, #0x0806
   0108 E5            [11]  248 	push	hl
   0109 C5            [11]  249 	push	bc
   010A 21r00r00      [10]  250 	ld	hl, #_G_frameDownCenter
   010D E5            [11]  251 	push	hl
   010E CDr00r00      [17]  252 	call	_cpct_drawSprite
                            253 ;src/sprites/frame.c:63: pvmem = cpct_getScreenPtr(pscr, x, 192);
   0111 3E C0         [ 7]  254 	ld	a, #0xc0
   0113 F5            [11]  255 	push	af
   0114 33            [ 6]  256 	inc	sp
   0115 DD 7E 06      [19]  257 	ld	a, 6 (ix)
   0118 F5            [11]  258 	push	af
   0119 33            [ 6]  259 	inc	sp
   011A C1            [10]  260 	pop	bc
   011B E1            [10]  261 	pop	hl
   011C E5            [11]  262 	push	hl
   011D C5            [11]  263 	push	bc
   011E E5            [11]  264 	push	hl
   011F CDr00r00      [17]  265 	call	_cpct_getScreenPtr
                            266 ;src/sprites/frame.c:64: cpct_drawTileAligned4x8(G_frameDownLeftCorner,  pvmem);        // Down-Left
   0122 5D            [ 4]  267 	ld	e, l
   0123 54            [ 4]  268 	ld	d, h
   0124 01r00r00      [10]  269 	ld	bc, #_G_frameDownLeftCorner+0
   0127 E5            [11]  270 	push	hl
   0128 D5            [11]  271 	push	de
   0129 C5            [11]  272 	push	bc
   012A CDr00r00      [17]  273 	call	_cpct_drawTileAligned4x8
   012D E1            [10]  274 	pop	hl
                            275 ;src/sprites/frame.c:65: cpct_drawTileAligned4x8(G_frameDownRightCorner, pvmem + 54);   // Down-Right
   012E 01 36 00      [10]  276 	ld	bc, #0x0036
   0131 09            [11]  277 	add	hl, bc
   0132 01r00r00      [10]  278 	ld	bc, #_G_frameDownRightCorner+0
   0135 E5            [11]  279 	push	hl
   0136 C5            [11]  280 	push	bc
   0137 CDr00r00      [17]  281 	call	_cpct_drawTileAligned4x8
   013A DD F9         [10]  282 	ld	sp, ix
   013C DD E1         [14]  283 	pop	ix
   013E C9            [10]  284 	ret
                            285 	.area _CODE
                            286 	.area _INITIALIZER
                            287 	.area _CABS (ABS)
