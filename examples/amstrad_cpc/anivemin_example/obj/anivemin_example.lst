                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module anivemin_example
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _cpct_setPalette
                             13 	.globl _cpct_waitVSYNC
                             14 	.globl _cpct_setVideoMode
                             15 	.globl _cpct_drawSolidBox
                             16 	.globl _cpct_isKeyPressed
                             17 	.globl _cpct_scanKeyboard
                             18 	.globl _cpct_memset
                             19 	.globl _cpct_disableFirmware
                             20 	.globl _border_color
                             21 	.globl _g_palette
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DATA
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _INITIALIZED
   0000                      33 _border_color::
   0000                      34 	.ds 1
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;anivemin_example.c:19: void main(void)
                             56 ;	---------------------------------
                             57 ; Function main
                             58 ; ---------------------------------
   0000                      59 _main::
                             60 ;anivemin_example.c:22: cpct_disableFirmware();
   0000 CDr00r00      [17]   61 	call	_cpct_disableFirmware
                             62 ;anivemin_example.c:25: cpct_setVideoMode(0);
   0003 2E 00         [ 7]   63 	ld	l, #0x00
   0005 CDr00r00      [17]   64 	call	_cpct_setVideoMode
                             65 ;anivemin_example.c:28: cpct_setPalette(g_palette, 16);
   0008 21 10 00      [10]   66 	ld	hl, #0x0010
   000B E5            [11]   67 	push	hl
   000C 21rECr00      [10]   68 	ld	hl, #_g_palette
   000F E5            [11]   69 	push	hl
   0010 CDr00r00      [17]   70 	call	_cpct_setPalette
                             71 ;anivemin_example.c:31: cpct_clearScreen(0);
   0013 21 00 40      [10]   72 	ld	hl, #0x4000
   0016 E5            [11]   73 	push	hl
   0017 AF            [ 4]   74 	xor	a, a
   0018 F5            [11]   75 	push	af
   0019 33            [ 6]   76 	inc	sp
   001A 26 C0         [ 7]   77 	ld	h, #0xc0
   001C E5            [11]   78 	push	hl
   001D CDr00r00      [17]   79 	call	_cpct_memset
                             80 ;anivemin_example.c:34: cpct_drawSolidBox((void *)0xC000, border_color, 40, 200);
   0020 21r00r00      [10]   81 	ld	hl,#_border_color + 0
   0023 4E            [ 7]   82 	ld	c, (hl)
   0024 06 00         [ 7]   83 	ld	b, #0x00
   0026 21 28 C8      [10]   84 	ld	hl, #0xc828
   0029 E5            [11]   85 	push	hl
   002A C5            [11]   86 	push	bc
   002B 21 00 C0      [10]   87 	ld	hl, #0xc000
   002E E5            [11]   88 	push	hl
   002F CDr00r00      [17]   89 	call	_cpct_drawSolidBox
                             90 ;anivemin_example.c:35: cpct_drawSolidBox((void *)(0xC000 + 40 * 4 - 4), border_color, 4, 200);
   0032 21r00r00      [10]   91 	ld	hl,#_border_color + 0
   0035 4E            [ 7]   92 	ld	c, (hl)
   0036 06 00         [ 7]   93 	ld	b, #0x00
   0038 21 04 C8      [10]   94 	ld	hl, #0xc804
   003B E5            [11]   95 	push	hl
   003C C5            [11]   96 	push	bc
   003D 21 9C C0      [10]   97 	ld	hl, #0xc09c
   0040 E5            [11]   98 	push	hl
   0041 CDr00r00      [17]   99 	call	_cpct_drawSolidBox
                            100 ;anivemin_example.c:36: cpct_drawSolidBox((void *)0xC000, border_color, 40 * 4, 8);
   0044 21r00r00      [10]  101 	ld	hl,#_border_color + 0
   0047 4E            [ 7]  102 	ld	c, (hl)
   0048 06 00         [ 7]  103 	ld	b, #0x00
   004A 21 A0 08      [10]  104 	ld	hl, #0x08a0
   004D E5            [11]  105 	push	hl
   004E C5            [11]  106 	push	bc
   004F 21 00 C0      [10]  107 	ld	hl, #0xc000
   0052 E5            [11]  108 	push	hl
   0053 CDr00r00      [17]  109 	call	_cpct_drawSolidBox
                            110 ;anivemin_example.c:37: cpct_drawSolidBox((void *)(0xC000 + 80 * 24), border_color, 40 * 4, 8);
   0056 21r00r00      [10]  111 	ld	hl,#_border_color + 0
   0059 4E            [ 7]  112 	ld	c, (hl)
   005A 06 00         [ 7]  113 	ld	b, #0x00
   005C 21 A0 08      [10]  114 	ld	hl, #0x08a0
   005F E5            [11]  115 	push	hl
   0060 C5            [11]  116 	push	bc
   0061 21 80 C7      [10]  117 	ld	hl, #0xc780
   0064 E5            [11]  118 	push	hl
   0065 CDr00r00      [17]  119 	call	_cpct_drawSolidBox
                            120 ;anivemin_example.c:40: while (1)
   0068                     121 00107$:
                            122 ;anivemin_example.c:43: cpct_scanKeyboard();
   0068 CDr00r00      [17]  123 	call	_cpct_scanKeyboard
                            124 ;anivemin_example.c:46: if (cpct_isKeyPressed(Key_Space))
   006B 21 05 80      [10]  125 	ld	hl, #0x8005
   006E CDr00r00      [17]  126 	call	_cpct_isKeyPressed
   0071 7D            [ 4]  127 	ld	a, l
   0072 B7            [ 4]  128 	or	a, a
   0073 28 71         [12]  129 	jr	Z,00105$
                            130 ;anivemin_example.c:48: border_color = (border_color + 1) % 16;
   0075 21r00r00      [10]  131 	ld	hl,#_border_color + 0
   0078 4E            [ 7]  132 	ld	c, (hl)
   0079 06 00         [ 7]  133 	ld	b, #0x00
   007B 03            [ 6]  134 	inc	bc
   007C 21 10 00      [10]  135 	ld	hl, #0x0010
   007F E5            [11]  136 	push	hl
   0080 C5            [11]  137 	push	bc
   0081 CDr00r00      [17]  138 	call	__modsint
   0084 F1            [10]  139 	pop	af
   0085 F1            [10]  140 	pop	af
   0086 FD 21r00r00   [14]  141 	ld	iy, #_border_color
   008A FD 75 00      [19]  142 	ld	0 (iy), l
                            143 ;anivemin_example.c:51: cpct_drawSolidBox((void *)0xC000, border_color, 40, 200);
   008D FD 4E 00      [19]  144 	ld	c, 0 (iy)
   0090 06 00         [ 7]  145 	ld	b, #0x00
   0092 21 28 C8      [10]  146 	ld	hl, #0xc828
   0095 E5            [11]  147 	push	hl
   0096 C5            [11]  148 	push	bc
   0097 21 00 C0      [10]  149 	ld	hl, #0xc000
   009A E5            [11]  150 	push	hl
   009B CDr00r00      [17]  151 	call	_cpct_drawSolidBox
                            152 ;anivemin_example.c:52: cpct_drawSolidBox((void *)(0xC000 + 40 * 4 - 4), border_color, 4, 200);
   009E 21r00r00      [10]  153 	ld	hl,#_border_color + 0
   00A1 4E            [ 7]  154 	ld	c, (hl)
   00A2 06 00         [ 7]  155 	ld	b, #0x00
   00A4 21 04 C8      [10]  156 	ld	hl, #0xc804
   00A7 E5            [11]  157 	push	hl
   00A8 C5            [11]  158 	push	bc
   00A9 21 9C C0      [10]  159 	ld	hl, #0xc09c
   00AC E5            [11]  160 	push	hl
   00AD CDr00r00      [17]  161 	call	_cpct_drawSolidBox
                            162 ;anivemin_example.c:53: cpct_drawSolidBox((void *)0xC000, border_color, 40 * 4, 8);
   00B0 21r00r00      [10]  163 	ld	hl,#_border_color + 0
   00B3 4E            [ 7]  164 	ld	c, (hl)
   00B4 06 00         [ 7]  165 	ld	b, #0x00
   00B6 21 A0 08      [10]  166 	ld	hl, #0x08a0
   00B9 E5            [11]  167 	push	hl
   00BA C5            [11]  168 	push	bc
   00BB 21 00 C0      [10]  169 	ld	hl, #0xc000
   00BE E5            [11]  170 	push	hl
   00BF CDr00r00      [17]  171 	call	_cpct_drawSolidBox
                            172 ;anivemin_example.c:54: cpct_drawSolidBox((void *)(0xC000 + 80 * 24), border_color, 40 * 4, 8);
   00C2 21r00r00      [10]  173 	ld	hl,#_border_color + 0
   00C5 4E            [ 7]  174 	ld	c, (hl)
   00C6 06 00         [ 7]  175 	ld	b, #0x00
   00C8 21 A0 08      [10]  176 	ld	hl, #0x08a0
   00CB E5            [11]  177 	push	hl
   00CC C5            [11]  178 	push	bc
   00CD 21 80 C7      [10]  179 	ld	hl, #0xc780
   00D0 E5            [11]  180 	push	hl
   00D1 CDr00r00      [17]  181 	call	_cpct_drawSolidBox
                            182 ;anivemin_example.c:57: while (cpct_isKeyPressed(Key_Space))
   00D4                     183 00101$:
   00D4 21 05 80      [10]  184 	ld	hl, #0x8005
   00D7 CDr00r00      [17]  185 	call	_cpct_isKeyPressed
   00DA 7D            [ 4]  186 	ld	a, l
   00DB B7            [ 4]  187 	or	a, a
   00DC 28 08         [12]  188 	jr	Z,00105$
                            189 ;anivemin_example.c:59: cpct_scanKeyboard();
   00DE CDr00r00      [17]  190 	call	_cpct_scanKeyboard
                            191 ;anivemin_example.c:60: cpct_waitVSYNC();
   00E1 CDr00r00      [17]  192 	call	_cpct_waitVSYNC
   00E4 18 EE         [12]  193 	jr	00101$
   00E6                     194 00105$:
                            195 ;anivemin_example.c:65: cpct_waitVSYNC();
   00E6 CDr00r00      [17]  196 	call	_cpct_waitVSYNC
   00E9 C3r68r00      [10]  197 	jp	00107$
   00EC                     198 _g_palette:
   00EC 00                  199 	.db #0x00	; 0
   00ED 03                  200 	.db #0x03	; 3
   00EE 06                  201 	.db #0x06	; 6
   00EF 09                  202 	.db #0x09	; 9
   00F0 0C                  203 	.db #0x0c	; 12
   00F1 0F                  204 	.db #0x0f	; 15
   00F2 12                  205 	.db #0x12	; 18
   00F3 15                  206 	.db #0x15	; 21
   00F4 18                  207 	.db #0x18	; 24
   00F5 1A                  208 	.db #0x1a	; 26
   00F6 1C                  209 	.db #0x1c	; 28
   00F7 1E                  210 	.db #0x1e	; 30
   00F8 1F                  211 	.db #0x1f	; 31
   00F9 16                  212 	.db #0x16	; 22
   00FA 0E                  213 	.db #0x0e	; 14
   00FB 06                  214 	.db #0x06	; 6
                            215 	.area _CODE
                            216 	.area _INITIALIZER
   0000                     217 __xinit__border_color:
   0000 01                  218 	.db #0x01	; 1
                            219 	.area _CABS (ABS)
