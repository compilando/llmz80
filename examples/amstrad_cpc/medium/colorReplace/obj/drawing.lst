                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module drawing
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _DrawBackground
                             12 	.globl _DrawCloud
                             13 	.globl _DrawBalloon
                             14 	.globl _DeleteBalloons
                             15 	.globl _ClearBalloon
                             16 	.globl _ColorSprite
                             17 	.globl _GetRand
                             18 	.globl _GetBackBufferPtr
                             19 	.globl _cpct_getRandom_mxor_u8
                             20 	.globl _cpct_drawSpriteMasked
                             21 	.globl _cpct_drawSprite
                             22 	.globl _cpct_drawSolidBox
                             23 	.globl _cpct_pens2pixelPatternPairM0_real
                             24 	.globl _cpct_drawSpriteMaskedAlignedColorizeM0
                             25 	.globl _cpct_drawSpriteMaskedColorizeM0
                             26 	.globl _cpct_drawSpriteColorizeM0
                             27 	.globl _cpct_spriteMaskedColourizeM0
                             28 	.globl _cpct_spriteColourizeM0
                             29 	.globl _cpct_memcpy
                             30 	.globl _cpct_memset
                             31 	.globl _gStars
                             32 	.globl _gBalloons
                             33 	.globl _gPosCloud
                             34 	.globl _gBalloonColor
                             35 	.globl _gBackGroundColor
                             36 	.globl _gSpriteColorized
                             37 	.globl _UpdateBalloons
                             38 	.globl _DrawStars
                             39 	.globl _DrawSceneBalloons
                             40 	.globl _InitializeDrawing
                             41 ;--------------------------------------------------------
                             42 ; special function registers
                             43 ;--------------------------------------------------------
                             44 ;--------------------------------------------------------
                             45 ; ram data
                             46 ;--------------------------------------------------------
                             47 	.area _DATA
   0000                      48 _gSpriteColorized::
   0000                      49 	.ds 340
   0154                      50 _gBackGroundColor::
   0154                      51 	.ds 1
   0155                      52 _gBalloonColor::
   0155                      53 	.ds 1
   0156                      54 _gPosCloud::
   0156                      55 	.ds 1
   0157                      56 _gBalloons::
   0157                      57 	.ds 65
   0198                      58 _gStars::
   0198                      59 	.ds 30
   01B6                      60 _DrawStars_sColorAnim_1_154:
   01B6                      61 	.ds 1
                             62 ;--------------------------------------------------------
                             63 ; ram data
                             64 ;--------------------------------------------------------
                             65 	.area _INITIALIZED
                             66 ;--------------------------------------------------------
                             67 ; absolute external ram data
                             68 ;--------------------------------------------------------
                             69 	.area _DABS (ABS)
                             70 ;--------------------------------------------------------
                             71 ; global & static initialisations
                             72 ;--------------------------------------------------------
                             73 	.area _HOME
                             74 	.area _GSINIT
                             75 	.area _GSFINAL
                             76 	.area _GSINIT
                             77 ;src/drawing.c:259: static u8 sColorAnim = 0;
   0000 FD 21rB6r01   [14]   78 	ld	iy, #_DrawStars_sColorAnim_1_154
   0004 FD 36 00 00   [19]   79 	ld	0 (iy), #0x00
                             80 ;--------------------------------------------------------
                             81 ; Home
                             82 ;--------------------------------------------------------
                             83 	.area _HOME
                             84 	.area _HOME
                             85 ;--------------------------------------------------------
                             86 ; code
                             87 ;--------------------------------------------------------
                             88 	.area _CODE
                             89 ;src/drawing.c:72: u8 GetRand(u8 max)
                             90 ;	---------------------------------
                             91 ; Function GetRand
                             92 ; ---------------------------------
   0000                      93 _GetRand::
                             94 ;src/drawing.c:74: return cpct_rand()%max;
   0000 CDr00r00      [17]   95 	call	_cpct_getRandom_mxor_u8
   0003 45            [ 4]   96 	ld	b, l
   0004 21 02 00      [10]   97 	ld	hl, #2+0
   0007 39            [11]   98 	add	hl, sp
   0008 7E            [ 7]   99 	ld	a, (hl)
   0009 F5            [11]  100 	push	af
   000A 33            [ 6]  101 	inc	sp
   000B C5            [11]  102 	push	bc
   000C 33            [ 6]  103 	inc	sp
   000D CDr00r00      [17]  104 	call	__moduchar
   0010 F1            [10]  105 	pop	af
   0011 C9            [10]  106 	ret
                            107 ;src/drawing.c:80: u8* ColorSprite(u8 color)
                            108 ;	---------------------------------
                            109 ; Function ColorSprite
                            110 ; ---------------------------------
   0012                     111 _ColorSprite::
   0012 DD E5         [15]  112 	push	ix
   0014 DD 21 00 00   [14]  113 	ld	ix,#0
   0018 DD 39         [15]  114 	add	ix,sp
                            115 ;src/drawing.c:83: u16 replacePatColor1 = CPCTM_PENS2PIXELPATTERNPAIR_M0(1, color); // Just for example use cpct_pens2pixelPatternPairM0 with variables
   001A DD 7E 04      [19]  116 	ld	a, 4 (ix)
   001D E6 01         [ 7]  117 	and	a, #0x01
   001F 0F            [ 4]  118 	rrca
   0020 0F            [ 4]  119 	rrca
   0021 E6 C0         [ 7]  120 	and	a, #0xc0
   0023 4F            [ 4]  121 	ld	c, a
   0024 DD 7E 04      [19]  122 	ld	a, 4 (ix)
   0027 E6 02         [ 7]  123 	and	a, #0x02
   0029 87            [ 4]  124 	add	a, a
   002A B1            [ 4]  125 	or	a, c
   002B 4F            [ 4]  126 	ld	c, a
   002C DD 7E 04      [19]  127 	ld	a, 4 (ix)
   002F E6 04         [ 7]  128 	and	a, #0x04
   0031 87            [ 4]  129 	add	a, a
   0032 87            [ 4]  130 	add	a, a
   0033 B1            [ 4]  131 	or	a, c
   0034 4F            [ 4]  132 	ld	c, a
   0035 DD 7E 04      [19]  133 	ld	a, 4 (ix)
   0038 E6 08         [ 7]  134 	and	a, #0x08
   003A 0F            [ 4]  135 	rrca
   003B 0F            [ 4]  136 	rrca
   003C 0F            [ 4]  137 	rrca
   003D E6 1F         [ 7]  138 	and	a, #0x1f
   003F B1            [ 4]  139 	or	a, c
   0040 4F            [ 4]  140 	ld	c,a
   0041 87            [ 4]  141 	add	a, a
   0042 B1            [ 4]  142 	or	a, c
   0043 5F            [ 4]  143 	ld	e, a
   0044 0E 00         [ 7]  144 	ld	c, #0x00
   0046 79            [ 4]  145 	ld	a, c
   0047 F6 C0         [ 7]  146 	or	a, #0xc0
   0049 57            [ 4]  147 	ld	d, a
                            148 ;src/drawing.c:84: u16 replacePatColor2 = cpct_pens2pixelPatternPairM0(2, color + 1);
   004A DD 46 04      [19]  149 	ld	b, 4 (ix)
   004D 04            [ 4]  150 	inc	b
   004E D5            [11]  151 	push	de
   004F 3E 02         [ 7]  152 	ld	a, #0x02
   0051 F5            [11]  153 	push	af
   0052 33            [ 6]  154 	inc	sp
   0053 C5            [11]  155 	push	bc
   0054 33            [ 6]  156 	inc	sp
   0055 CDr00r00      [17]  157 	call	_cpct_pens2pixelPatternPairM0_real
   0058 4D            [ 4]  158 	ld	c, l
   0059 44            [ 4]  159 	ld	b, h
   005A D1            [10]  160 	pop	de
                            161 ;src/drawing.c:87: cpct_memcpy(gSpriteColorized, g_balloon, G_BALLOON_W*G_BALLOON_H);
   005B C5            [11]  162 	push	bc
   005C D5            [11]  163 	push	de
   005D 21 54 01      [10]  164 	ld	hl, #0x0154
   0060 E5            [11]  165 	push	hl
   0061 21r00r00      [10]  166 	ld	hl, #_g_balloon
   0064 E5            [11]  167 	push	hl
   0065 21r00r00      [10]  168 	ld	hl, #_gSpriteColorized
   0068 E5            [11]  169 	push	hl
   0069 CDr00r00      [17]  170 	call	_cpct_memcpy
   006C D1            [10]  171 	pop	de
   006D 21r00r00      [10]  172 	ld	hl, #_gSpriteColorized
   0070 E5            [11]  173 	push	hl
   0071 21 54 01      [10]  174 	ld	hl, #0x0154
   0074 E5            [11]  175 	push	hl
   0075 D5            [11]  176 	push	de
   0076 CDr00r00      [17]  177 	call	_cpct_spriteColourizeM0
   0079 C1            [10]  178 	pop	bc
                            179 ;src/drawing.c:91: cpct_spriteColourizeM0(replacePatColor2, G_BALLOON_W*G_BALLOON_H, gSpriteColorized);
   007A 21r00r00      [10]  180 	ld	hl, #_gSpriteColorized
   007D E5            [11]  181 	push	hl
   007E 21 54 01      [10]  182 	ld	hl, #0x0154
   0081 E5            [11]  183 	push	hl
   0082 C5            [11]  184 	push	bc
   0083 CDr00r00      [17]  185 	call	_cpct_spriteColourizeM0
                            186 ;src/drawing.c:93: return gSpriteColorized;
   0086 21r00r00      [10]  187 	ld	hl, #_gSpriteColorized
   0089 DD E1         [14]  188 	pop	ix
   008B C9            [10]  189 	ret
                            190 ;src/drawing.c:99: void ClearBalloon(SBalloon* balloon)
                            191 ;	---------------------------------
                            192 ; Function ClearBalloon
                            193 ; ---------------------------------
   008C                     194 _ClearBalloon::
   008C DD E5         [15]  195 	push	ix
   008E DD 21 00 00   [14]  196 	ld	ix,#0
   0092 DD 39         [15]  197 	add	ix,sp
   0094 3B            [ 6]  198 	dec	sp
                            199 ;src/drawing.c:102: if (balloon->drawPosY < VIEW_DOWN)
   0095 DD 4E 04      [19]  200 	ld	c,4 (ix)
   0098 DD 46 05      [19]  201 	ld	b,5 (ix)
   009B 69            [ 4]  202 	ld	l, c
   009C 60            [ 4]  203 	ld	h, b
   009D 23            [ 6]  204 	inc	hl
   009E 23            [ 6]  205 	inc	hl
   009F 23            [ 6]  206 	inc	hl
   00A0 5E            [ 7]  207 	ld	e, (hl)
   00A1 7B            [ 4]  208 	ld	a, e
   00A2 D6 B4         [ 7]  209 	sub	a, #0xb4
   00A4 30 3D         [12]  210 	jr	NC,00105$
                            211 ;src/drawing.c:107: u8 clearCY = balloon->drawCY + BALLOON_TRAIL;
   00A6 C5            [11]  212 	push	bc
   00A7 FD E1         [14]  213 	pop	iy
   00A9 FD 7E 04      [19]  214 	ld	a, 4 (iy)
   00AC C6 08         [ 7]  215 	add	a, #0x08
   00AE DD 77 FF      [19]  216 	ld	-1 (ix), a
                            217 ;src/drawing.c:110: u8 posDownClearY = balloon->drawPosY + clearCY;
   00B1 7B            [ 4]  218 	ld	a, e
   00B2 DD 86 FF      [19]  219 	add	a, -1 (ix)
   00B5 57            [ 4]  220 	ld	d, a
                            221 ;src/drawing.c:111: if (posDownClearY > VIEW_DOWN)
                            222 ;src/drawing.c:112: clearCY = VIEW_DOWN - balloon->drawPosY;
   00B6 3E B4         [ 7]  223 	ld	a,#0xb4
   00B8 BA            [ 4]  224 	cp	a,d
   00B9 30 04         [12]  225 	jr	NC,00102$
   00BB 93            [ 4]  226 	sub	a, e
   00BC DD 77 FF      [19]  227 	ld	-1 (ix), a
   00BF                     228 00102$:
                            229 ;src/drawing.c:115: pvmem = GetBackBufferPtr(balloon->posX, balloon->drawPosY);
   00BF 69            [ 4]  230 	ld	l, c
   00C0 60            [ 4]  231 	ld	h, b
   00C1 23            [ 6]  232 	inc	hl
   00C2 23            [ 6]  233 	inc	hl
   00C3 46            [ 7]  234 	ld	b, (hl)
   00C4 7B            [ 4]  235 	ld	a, e
   00C5 F5            [11]  236 	push	af
   00C6 33            [ 6]  237 	inc	sp
   00C7 C5            [11]  238 	push	bc
   00C8 33            [ 6]  239 	inc	sp
   00C9 CDr00r00      [17]  240 	call	_GetBackBufferPtr
   00CC F1            [10]  241 	pop	af
   00CD 4D            [ 4]  242 	ld	c, l
   00CE 44            [ 4]  243 	ld	b, h
                            244 ;src/drawing.c:116: cpct_drawSolidBox(pvmem, gBackGroundColor, G_BALLOON_W, clearCY);    
   00CF 21r54r01      [10]  245 	ld	hl,#_gBackGroundColor + 0
   00D2 5E            [ 7]  246 	ld	e, (hl)
   00D3 16 00         [ 7]  247 	ld	d, #0x00
   00D5 DD 7E FF      [19]  248 	ld	a, -1 (ix)
   00D8 F5            [11]  249 	push	af
   00D9 33            [ 6]  250 	inc	sp
   00DA 3E 0A         [ 7]  251 	ld	a, #0x0a
   00DC F5            [11]  252 	push	af
   00DD 33            [ 6]  253 	inc	sp
   00DE D5            [11]  254 	push	de
   00DF C5            [11]  255 	push	bc
   00E0 CDr00r00      [17]  256 	call	_cpct_drawSolidBox
   00E3                     257 00105$:
   00E3 33            [ 6]  258 	inc	sp
   00E4 DD E1         [14]  259 	pop	ix
   00E6 C9            [10]  260 	ret
                            261 ;src/drawing.c:123: void DeleteBalloons(SBalloon* balloons, SBalloon* balloonToDel, u8* nb)
                            262 ;	---------------------------------
                            263 ; Function DeleteBalloons
                            264 ; ---------------------------------
   00E7                     265 _DeleteBalloons::
                            266 ;src/drawing.c:127: const SBalloon* lastBalloon = &balloons[--*nb];
   00E7 21 06 00      [10]  267 	ld	hl, #6
   00EA 39            [11]  268 	add	hl, sp
   00EB 4E            [ 7]  269 	ld	c, (hl)
   00EC 23            [ 6]  270 	inc	hl
   00ED 46            [ 7]  271 	ld	b, (hl)
   00EE 0A            [ 7]  272 	ld	a, (bc)
   00EF C6 FF         [ 7]  273 	add	a, #0xff
   00F1 02            [ 7]  274 	ld	(bc), a
   00F2 6F            [ 4]  275 	ld	l, a
   00F3 26 00         [ 7]  276 	ld	h, #0x00
   00F5 29            [11]  277 	add	hl, hl
   00F6 29            [11]  278 	add	hl, hl
   00F7 29            [11]  279 	add	hl, hl
   00F8 4D            [ 4]  280 	ld	c, l
   00F9 44            [ 4]  281 	ld	b, h
   00FA 21 02 00      [10]  282 	ld	hl, #2
   00FD 39            [11]  283 	add	hl, sp
   00FE 7E            [ 7]  284 	ld	a, (hl)
   00FF 23            [ 6]  285 	inc	hl
   0100 66            [ 7]  286 	ld	h, (hl)
   0101 6F            [ 4]  287 	ld	l, a
   0102 09            [11]  288 	add	hl, bc
   0103 4D            [ 4]  289 	ld	c, l
   0104 44            [ 4]  290 	ld	b, h
                            291 ;src/drawing.c:130: if (balloonToDel != lastBalloon)
   0105 FD 21 04 00   [14]  292 	ld	iy, #4
   0109 FD 39         [15]  293 	add	iy, sp
   010B FD 7E 00      [19]  294 	ld	a, 0 (iy)
   010E 91            [ 4]  295 	sub	a, c
   010F 20 05         [12]  296 	jr	NZ,00109$
   0111 FD 7E 01      [19]  297 	ld	a, 1 (iy)
   0114 90            [ 4]  298 	sub	a, b
   0115 C8            [11]  299 	ret	Z
   0116                     300 00109$:
                            301 ;src/drawing.c:131: cpct_memcpy(balloonToDel, lastBalloon, sizeof(SBalloon));
   0116 FD 5E 00      [19]  302 	ld	e,0 (iy)
   0119 FD 56 01      [19]  303 	ld	d,1 (iy)
   011C 21 08 00      [10]  304 	ld	hl, #0x0008
   011F E5            [11]  305 	push	hl
   0120 C5            [11]  306 	push	bc
   0121 D5            [11]  307 	push	de
   0122 CDr00r00      [17]  308 	call	_cpct_memcpy
   0125 C9            [10]  309 	ret
                            310 ;src/drawing.c:137: void UpdateBalloons()
                            311 ;	---------------------------------
                            312 ; Function UpdateBalloons
                            313 ; ---------------------------------
   0126                     314 _UpdateBalloons::
   0126 DD E5         [15]  315 	push	ix
   0128 DD 21 00 00   [14]  316 	ld	ix,#0
   012C DD 39         [15]  317 	add	ix,sp
   012E F5            [11]  318 	push	af
   012F F5            [11]  319 	push	af
   0130 3B            [ 6]  320 	dec	sp
                            321 ;src/drawing.c:139: SBalloon* itBalloon = gBalloons.balloons;
                            322 ;src/drawing.c:143: if (gBalloons.nb < NB_BALLOONS)
   0131 21r57r01      [10]  323 	ld	hl, #_gBalloons + 0
   0134 4E            [ 7]  324 	ld	c, (hl)
   0135 79            [ 4]  325 	ld	a, c
   0136 D6 08         [ 7]  326 	sub	a, #0x08
   0138 D2rBAr01      [10]  327 	jp	NC, 00127$
                            328 ;src/drawing.c:147: SBalloon* newBalloon = &gBalloons.balloons[gBalloons.nb++];
   013B 41            [ 4]  329 	ld	b, c
   013C 04            [ 4]  330 	inc	b
   013D 21r57r01      [10]  331 	ld	hl, #_gBalloons
   0140 70            [ 7]  332 	ld	(hl), b
   0141 79            [ 4]  333 	ld	a, c
   0142 07            [ 4]  334 	rlca
   0143 07            [ 4]  335 	rlca
   0144 07            [ 4]  336 	rlca
   0145 E6 F8         [ 7]  337 	and	a, #0xf8
   0147 4F            [ 4]  338 	ld	c, a
   0148 21r58r01      [10]  339 	ld	hl, #(_gBalloons + 0x0001)
   014B 06 00         [ 7]  340 	ld	b, #0x00
   014D 09            [11]  341 	add	hl, bc
   014E 4D            [ 4]  342 	ld	c, l
   014F 44            [ 4]  343 	ld	b, h
                            344 ;src/drawing.c:150: newBalloon->posX = GetRand(SCREEN_CX - G_BALLOON_W);
   0150 59            [ 4]  345 	ld	e, c
   0151 50            [ 4]  346 	ld	d, b
   0152 13            [ 6]  347 	inc	de
   0153 13            [ 6]  348 	inc	de
   0154 C5            [11]  349 	push	bc
   0155 D5            [11]  350 	push	de
   0156 3E 46         [ 7]  351 	ld	a, #0x46
   0158 F5            [11]  352 	push	af
   0159 33            [ 6]  353 	inc	sp
   015A CDr00r00      [17]  354 	call	_GetRand
   015D 33            [ 6]  355 	inc	sp
   015E 7D            [ 4]  356 	ld	a, l
   015F D1            [10]  357 	pop	de
   0160 C1            [10]  358 	pop	bc
   0161 12            [ 7]  359 	ld	(de), a
                            360 ;src/drawing.c:151: newBalloon->posY = SCREEN_CY - GetRand(40);
   0162 C5            [11]  361 	push	bc
   0163 3E 28         [ 7]  362 	ld	a, #0x28
   0165 F5            [11]  363 	push	af
   0166 33            [ 6]  364 	inc	sp
   0167 CDr00r00      [17]  365 	call	_GetRand
   016A 33            [ 6]  366 	inc	sp
   016B C1            [10]  367 	pop	bc
   016C 26 00         [ 7]  368 	ld	h, #0x00
   016E 3E C8         [ 7]  369 	ld	a, #0xc8
   0170 95            [ 4]  370 	sub	a, l
   0171 5F            [ 4]  371 	ld	e, a
   0172 3E 00         [ 7]  372 	ld	a, #0x00
   0174 9C            [ 4]  373 	sbc	a, h
   0175 57            [ 4]  374 	ld	d, a
   0176 69            [ 4]  375 	ld	l, c
   0177 60            [ 4]  376 	ld	h, b
   0178 73            [ 7]  377 	ld	(hl), e
   0179 23            [ 6]  378 	inc	hl
   017A 72            [ 7]  379 	ld	(hl), d
                            380 ;src/drawing.c:154: newBalloon->speed = GetRand(3) + 2;
   017B 21 05 00      [10]  381 	ld	hl, #0x0005
   017E 09            [11]  382 	add	hl, bc
   017F E5            [11]  383 	push	hl
   0180 C5            [11]  384 	push	bc
   0181 3E 03         [ 7]  385 	ld	a, #0x03
   0183 F5            [11]  386 	push	af
   0184 33            [ 6]  387 	inc	sp
   0185 CDr00r00      [17]  388 	call	_GetRand
   0188 33            [ 6]  389 	inc	sp
   0189 5D            [ 4]  390 	ld	e, l
   018A C1            [10]  391 	pop	bc
   018B E1            [10]  392 	pop	hl
   018C 1C            [ 4]  393 	inc	e
   018D 1C            [ 4]  394 	inc	e
   018E 73            [ 7]  395 	ld	(hl), e
                            396 ;src/drawing.c:157: gBalloonColor = (gBalloonColor + 2) % 12;
   018F 21r55r01      [10]  397 	ld	hl,#_gBalloonColor + 0
   0192 5E            [ 7]  398 	ld	e, (hl)
   0193 16 00         [ 7]  399 	ld	d, #0x00
   0195 13            [ 6]  400 	inc	de
   0196 13            [ 6]  401 	inc	de
   0197 C5            [11]  402 	push	bc
   0198 21 0C 00      [10]  403 	ld	hl, #0x000c
   019B E5            [11]  404 	push	hl
   019C D5            [11]  405 	push	de
   019D CDr00r00      [17]  406 	call	__modsint
   01A0 F1            [10]  407 	pop	af
   01A1 F1            [10]  408 	pop	af
   01A2 C1            [10]  409 	pop	bc
   01A3 FD 21r55r01   [14]  410 	ld	iy, #_gBalloonColor
   01A7 FD 75 00      [19]  411 	ld	0 (iy), l
                            412 ;src/drawing.c:158: newBalloon->color = gBalloonColor + 1;
   01AA 21 06 00      [10]  413 	ld	hl, #0x0006
   01AD 09            [11]  414 	add	hl,bc
   01AE EB            [ 4]  415 	ex	de,hl
   01AF FD 7E 00      [19]  416 	ld	a, 0 (iy)
   01B2 3C            [ 4]  417 	inc	a
   01B3 12            [ 7]  418 	ld	(de), a
                            419 ;src/drawing.c:161: newBalloon->status = BALLOON_ACTIVE;
   01B4 21 07 00      [10]  420 	ld	hl, #0x0007
   01B7 09            [11]  421 	add	hl, bc
   01B8 36 01         [10]  422 	ld	(hl), #0x01
                            423 ;src/drawing.c:165: for (i = 0; i < gBalloons.nb; i++)
   01BA                     424 00127$:
   01BA 01r58r01      [10]  425 	ld	bc, #(_gBalloons + 0x0001)
   01BD DD 36 FB 00   [19]  426 	ld	-5 (ix), #0x00
   01C1                     427 00117$:
   01C1 21r57r01      [10]  428 	ld	hl, #_gBalloons + 0
   01C4 DD 7E FB      [19]  429 	ld	a,-5 (ix)
   01C7 96            [ 7]  430 	sub	a,(hl)
   01C8 D2r80r02      [10]  431 	jp	NC, 00119$
                            432 ;src/drawing.c:168: if (itBalloon->status == BALLOON_ACTIVE)
   01CB 21 07 00      [10]  433 	ld	hl, #0x0007
   01CE 09            [11]  434 	add	hl,bc
   01CF DD 75 FC      [19]  435 	ld	-4 (ix), l
   01D2 DD 74 FD      [19]  436 	ld	-3 (ix), h
   01D5 5E            [ 7]  437 	ld	e, (hl)
   01D6 1D            [ 4]  438 	dec	e
   01D7 C2r5Ar02      [10]  439 	jp	NZ,00113$
                            440 ;src/drawing.c:171: if (itBalloon->posY + G_BALLOON_H < VIEW_TOP)
   01DA 69            [ 4]  441 	ld	l, c
   01DB 60            [ 4]  442 	ld	h, b
   01DC 5E            [ 7]  443 	ld	e, (hl)
   01DD 23            [ 6]  444 	inc	hl
   01DE 56            [ 7]  445 	ld	d, (hl)
   01DF 21 22 00      [10]  446 	ld	hl, #0x0022
   01E2 19            [11]  447 	add	hl, de
   01E3 CB 7C         [ 8]  448 	bit	7, h
   01E5 28 12         [12]  449 	jr	Z,00110$
                            450 ;src/drawing.c:174: itBalloon->status = BALLOON_INACTIVE;
   01E7 DD 6E FC      [19]  451 	ld	l,-4 (ix)
   01EA DD 66 FD      [19]  452 	ld	h,-3 (ix)
   01ED 36 00         [10]  453 	ld	(hl), #0x00
                            454 ;src/drawing.c:176: ClearBalloon(itBalloon);
   01EF C5            [11]  455 	push	bc
   01F0 C5            [11]  456 	push	bc
   01F1 CDr8Cr00      [17]  457 	call	_ClearBalloon
   01F4 F1            [10]  458 	pop	af
   01F5 C1            [10]  459 	pop	bc
   01F6 C3r74r02      [10]  460 	jp	00114$
   01F9                     461 00110$:
                            462 ;src/drawing.c:181: i16 posY = itBalloon->posY - itBalloon->speed;
   01F9 C5            [11]  463 	push	bc
   01FA FD E1         [14]  464 	pop	iy
   01FC FD 6E 05      [19]  465 	ld	l, 5 (iy)
   01FF 26 00         [ 7]  466 	ld	h, #0x00
   0201 7B            [ 4]  467 	ld	a, e
   0202 95            [ 4]  468 	sub	a, l
   0203 5F            [ 4]  469 	ld	e, a
   0204 7A            [ 4]  470 	ld	a, d
   0205 9C            [ 4]  471 	sbc	a, h
   0206 57            [ 4]  472 	ld	d, a
                            473 ;src/drawing.c:182: itBalloon->posY = posY;
   0207 69            [ 4]  474 	ld	l, c
   0208 60            [ 4]  475 	ld	h, b
   0209 73            [ 7]  476 	ld	(hl), e
   020A 23            [ 6]  477 	inc	hl
   020B 72            [ 7]  478 	ld	(hl), d
                            479 ;src/drawing.c:187: itBalloon->drawPosY = 0;
   020C 69            [ 4]  480 	ld	l, c
   020D 60            [ 4]  481 	ld	h, b
   020E 23            [ 6]  482 	inc	hl
   020F 23            [ 6]  483 	inc	hl
   0210 23            [ 6]  484 	inc	hl
                            485 ;src/drawing.c:188: itBalloon->drawCY = G_BALLOON_H + posY;
   0211 FD 21 04 00   [14]  486 	ld	iy, #0x0004
   0215 FD 09         [15]  487 	add	iy, bc
   0217 DD 73 FC      [19]  488 	ld	-4 (ix), e
                            489 ;src/drawing.c:185: if (posY < VIEW_TOP)
   021A CB 7A         [ 8]  490 	bit	7, d
   021C 28 0C         [12]  491 	jr	Z,00107$
                            492 ;src/drawing.c:187: itBalloon->drawPosY = 0;
   021E 36 00         [10]  493 	ld	(hl), #0x00
                            494 ;src/drawing.c:188: itBalloon->drawCY = G_BALLOON_H + posY;
   0220 DD 7E FC      [19]  495 	ld	a, -4 (ix)
   0223 C6 22         [ 7]  496 	add	a, #0x22
   0225 FD 77 00      [19]  497 	ld	0 (iy), a
   0228 18 4A         [12]  498 	jr	00114$
   022A                     499 00107$:
                            500 ;src/drawing.c:192: if (posY + G_BALLOON_H > VIEW_DOWN)
   022A 7B            [ 4]  501 	ld	a, e
   022B C6 22         [ 7]  502 	add	a, #0x22
   022D DD 77 FE      [19]  503 	ld	-2 (ix), a
   0230 7A            [ 4]  504 	ld	a, d
   0231 CE 00         [ 7]  505 	adc	a, #0x00
   0233 DD 77 FF      [19]  506 	ld	-1 (ix), a
                            507 ;src/drawing.c:194: itBalloon->drawPosY = posY;
                            508 ;src/drawing.c:192: if (posY + G_BALLOON_H > VIEW_DOWN)
   0236 3E B4         [ 7]  509 	ld	a, #0xb4
   0238 DD BE FE      [19]  510 	cp	a, -2 (ix)
   023B 3E 00         [ 7]  511 	ld	a, #0x00
   023D DD 9E FF      [19]  512 	sbc	a, -1 (ix)
   0240 E2r45r02      [10]  513 	jp	PO, 00152$
   0243 EE 80         [ 7]  514 	xor	a, #0x80
   0245                     515 00152$:
   0245 F2r53r02      [10]  516 	jp	P, 00104$
                            517 ;src/drawing.c:194: itBalloon->drawPosY = posY;
   0248 73            [ 7]  518 	ld	(hl), e
                            519 ;src/drawing.c:195: itBalloon->drawCY = VIEW_DOWN - posY;
   0249 3E B4         [ 7]  520 	ld	a, #0xb4
   024B DD 96 FC      [19]  521 	sub	a, -4 (ix)
   024E FD 77 00      [19]  522 	ld	0 (iy), a
   0251 18 21         [12]  523 	jr	00114$
   0253                     524 00104$:
                            525 ;src/drawing.c:200: itBalloon->drawPosY = posY;
   0253 73            [ 7]  526 	ld	(hl), e
                            527 ;src/drawing.c:201: itBalloon->drawCY = G_BALLOON_H;
   0254 FD 36 00 22   [19]  528 	ld	0 (iy), #0x22
   0258 18 1A         [12]  529 	jr	00114$
   025A                     530 00113$:
                            531 ;src/drawing.c:209: ClearBalloon(itBalloon);
   025A C5            [11]  532 	push	bc
   025B C5            [11]  533 	push	bc
   025C CDr8Cr00      [17]  534 	call	_ClearBalloon
   025F F1            [10]  535 	pop	af
   0260 C1            [10]  536 	pop	bc
                            537 ;src/drawing.c:212: DeleteBalloons(gBalloons.balloons, itBalloon, &gBalloons.nb);
   0261 C5            [11]  538 	push	bc
   0262 21r57r01      [10]  539 	ld	hl, #_gBalloons
   0265 E5            [11]  540 	push	hl
   0266 C5            [11]  541 	push	bc
   0267 21r58r01      [10]  542 	ld	hl, #(_gBalloons + 0x0001)
   026A E5            [11]  543 	push	hl
   026B CDrE7r00      [17]  544 	call	_DeleteBalloons
   026E 21 06 00      [10]  545 	ld	hl, #6
   0271 39            [11]  546 	add	hl, sp
   0272 F9            [ 6]  547 	ld	sp, hl
   0273 C1            [10]  548 	pop	bc
   0274                     549 00114$:
                            550 ;src/drawing.c:216: itBalloon++;
   0274 21 08 00      [10]  551 	ld	hl, #0x0008
   0277 09            [11]  552 	add	hl,bc
   0278 4D            [ 4]  553 	ld	c, l
   0279 44            [ 4]  554 	ld	b, h
                            555 ;src/drawing.c:165: for (i = 0; i < gBalloons.nb; i++)
   027A DD 34 FB      [23]  556 	inc	-5 (ix)
   027D C3rC1r01      [10]  557 	jp	00117$
   0280                     558 00119$:
   0280 DD F9         [10]  559 	ld	sp, ix
   0282 DD E1         [14]  560 	pop	ix
   0284 C9            [10]  561 	ret
                            562 ;src/drawing.c:223: void DrawBalloon(SBalloon* balloon, u8* spriteBalloon)
                            563 ;	---------------------------------
                            564 ; Function DrawBalloon
                            565 ; ---------------------------------
   0285                     566 _DrawBalloon::
   0285 DD E5         [15]  567 	push	ix
   0287 DD 21 00 00   [14]  568 	ld	ix,#0
   028B DD 39         [15]  569 	add	ix,sp
   028D 21 FA FF      [10]  570 	ld	hl, #-6
   0290 39            [11]  571 	add	hl, sp
   0291 F9            [ 6]  572 	ld	sp, hl
                            573 ;src/drawing.c:225: i16 posY = balloon->posY;
   0292 DD 4E 04      [19]  574 	ld	c,4 (ix)
   0295 DD 46 05      [19]  575 	ld	b,5 (ix)
   0298 0A            [ 7]  576 	ld	a, (bc)
   0299 DD 77 FE      [19]  577 	ld	-2 (ix), a
   029C 03            [ 6]  578 	inc	bc
   029D 0A            [ 7]  579 	ld	a, (bc)
   029E DD 77 FF      [19]  580 	ld	-1 (ix), a
   02A1 0B            [ 6]  581 	dec	bc
                            582 ;src/drawing.c:228: if (posY + G_BALLOON_H > VIEW_TOP && posY < VIEW_DOWN)
   02A2 DD 7E FE      [19]  583 	ld	a, -2 (ix)
   02A5 C6 22         [ 7]  584 	add	a, #0x22
   02A7 5F            [ 4]  585 	ld	e, a
   02A8 DD 7E FF      [19]  586 	ld	a, -1 (ix)
   02AB CE 00         [ 7]  587 	adc	a, #0x00
   02AD 57            [ 4]  588 	ld	d, a
   02AE AF            [ 4]  589 	xor	a, a
   02AF BB            [ 4]  590 	cp	a, e
   02B0 9A            [ 4]  591 	sbc	a, d
   02B1 E2rB6r02      [10]  592 	jp	PO, 00120$
   02B4 EE 80         [ 7]  593 	xor	a, #0x80
   02B6                     594 00120$:
   02B6 F2r38r03      [10]  595 	jp	P, 00106$
   02B9 DD 7E FE      [19]  596 	ld	a, -2 (ix)
   02BC D6 B4         [ 7]  597 	sub	a, #0xb4
   02BE DD 7E FF      [19]  598 	ld	a, -1 (ix)
   02C1 17            [ 4]  599 	rla
   02C2 3F            [ 4]  600 	ccf
   02C3 1F            [ 4]  601 	rra
   02C4 DE 80         [ 7]  602 	sbc	a, #0x80
   02C6 30 70         [12]  603 	jr	NC,00106$
                            604 ;src/drawing.c:231: u8* pvmem = GetBackBufferPtr(balloon->posX, balloon->drawPosY);
   02C8 69            [ 4]  605 	ld	l, c
   02C9 60            [ 4]  606 	ld	h, b
   02CA 23            [ 6]  607 	inc	hl
   02CB 23            [ 6]  608 	inc	hl
   02CC 23            [ 6]  609 	inc	hl
   02CD 56            [ 7]  610 	ld	d, (hl)
   02CE 69            [ 4]  611 	ld	l, c
   02CF 60            [ 4]  612 	ld	h, b
   02D0 23            [ 6]  613 	inc	hl
   02D1 23            [ 6]  614 	inc	hl
   02D2 7E            [ 7]  615 	ld	a, (hl)
   02D3 C5            [11]  616 	push	bc
   02D4 5F            [ 4]  617 	ld	e, a
   02D5 D5            [11]  618 	push	de
   02D6 CDr00r00      [17]  619 	call	_GetBackBufferPtr
   02D9 F1            [10]  620 	pop	af
   02DA C1            [10]  621 	pop	bc
   02DB 33            [ 6]  622 	inc	sp
   02DC 33            [ 6]  623 	inc	sp
   02DD E5            [11]  624 	push	hl
                            625 ;src/drawing.c:232: u8* sprite = (u8*)spriteBalloon;
   02DE DD 5E 06      [19]  626 	ld	e,6 (ix)
   02E1 DD 56 07      [19]  627 	ld	d,7 (ix)
                            628 ;src/drawing.c:234: u16 replacePatColor1 = cpct_pens2pixelPatternPairM0(1, balloon->color);
   02E4 C5            [11]  629 	push	bc
   02E5 FD E1         [14]  630 	pop	iy
   02E7 FD 66 06      [19]  631 	ld	h, 6 (iy)
   02EA C5            [11]  632 	push	bc
   02EB D5            [11]  633 	push	de
   02EC 3E 01         [ 7]  634 	ld	a, #0x01
   02EE F5            [11]  635 	push	af
   02EF 33            [ 6]  636 	inc	sp
   02F0 E5            [11]  637 	push	hl
   02F1 33            [ 6]  638 	inc	sp
   02F2 CDr00r00      [17]  639 	call	_cpct_pens2pixelPatternPairM0_real
   02F5 D1            [10]  640 	pop	de
   02F6 C1            [10]  641 	pop	bc
   02F7 DD 75 FC      [19]  642 	ld	-4 (ix), l
   02FA DD 74 FD      [19]  643 	ld	-3 (ix), h
                            644 ;src/drawing.c:237: if (posY < VIEW_TOP)
   02FD DD CB FF 7E   [20]  645 	bit	7, -1 (ix)
   0301 28 13         [12]  646 	jr	Z,00102$
                            647 ;src/drawing.c:240: u8 y = -posY;
   0303 DD 6E FE      [19]  648 	ld	l, -2 (ix)
   0306 AF            [ 4]  649 	xor	a, a
   0307 95            [ 4]  650 	sub	a, l
   0308 6F            [ 4]  651 	ld	l, a
                            652 ;src/drawing.c:243: sprite = (u8*)spriteBalloon + G_BALLOON_W * y;
   0309 D5            [11]  653 	push	de
   030A 5D            [ 4]  654 	ld	e,l
   030B 16 00         [ 7]  655 	ld	d,#0x00
   030D 6B            [ 4]  656 	ld	l, e
   030E 62            [ 4]  657 	ld	h, d
   030F 29            [11]  658 	add	hl, hl
   0310 29            [11]  659 	add	hl, hl
   0311 19            [11]  660 	add	hl, de
   0312 29            [11]  661 	add	hl, hl
   0313 D1            [10]  662 	pop	de
   0314 19            [11]  663 	add	hl,de
   0315 EB            [ 4]  664 	ex	de,hl
   0316                     665 00102$:
                            666 ;src/drawing.c:246: cpct_drawSpriteMaskedAlignedColorizeM0(sprite, pvmem, G_BALLOON_W, balloon->drawCY, gMaskTable, replacePatColor1);
   0316 C5            [11]  667 	push	bc
   0317 FD E1         [14]  668 	pop	iy
   0319 FD 46 04      [19]  669 	ld	b, 4 (iy)
   031C DD 6E FC      [19]  670 	ld	l,-4 (ix)
   031F DD 66 FD      [19]  671 	ld	h,-3 (ix)
   0322 E5            [11]  672 	push	hl
   0323 21r00r00      [10]  673 	ld	hl, #_gMaskTable
   0326 E5            [11]  674 	push	hl
   0327 C5            [11]  675 	push	bc
   0328 33            [ 6]  676 	inc	sp
   0329 3E 0A         [ 7]  677 	ld	a, #0x0a
   032B F5            [11]  678 	push	af
   032C 33            [ 6]  679 	inc	sp
   032D DD 6E FA      [19]  680 	ld	l,-6 (ix)
   0330 DD 66 FB      [19]  681 	ld	h,-5 (ix)
   0333 E5            [11]  682 	push	hl
   0334 D5            [11]  683 	push	de
   0335 CDr00r00      [17]  684 	call	_cpct_drawSpriteMaskedAlignedColorizeM0
   0338                     685 00106$:
   0338 DD F9         [10]  686 	ld	sp, ix
   033A DD E1         [14]  687 	pop	ix
   033C C9            [10]  688 	ret
                            689 ;src/drawing.c:253: void DrawStars()
                            690 ;	---------------------------------
                            691 ; Function DrawStars
                            692 ; ---------------------------------
   033D                     693 _DrawStars::
   033D DD E5         [15]  694 	push	ix
   033F DD 21 00 00   [14]  695 	ld	ix,#0
   0343 DD 39         [15]  696 	add	ix,sp
   0345 F5            [11]  697 	push	af
                            698 ;src/drawing.c:261: for (u8 i = 0; i < NB_STARS; i++)
   0346 0E 00         [ 7]  699 	ld	c, #0x00
   0348                     700 00109$:
                            701 ;src/drawing.c:264: u8* pvmem = GetBackBufferPtr(SCREEN_CX / NB_STARS * i + 5, i + 175);
   0348 79            [ 4]  702 	ld	a,c
   0349 FE 0A         [ 7]  703 	cp	a,#0x0a
   034B D2r09r04      [10]  704 	jp	NC,00111$
   034E C6 AF         [ 7]  705 	add	a, #0xaf
   0350 57            [ 4]  706 	ld	d, a
   0351 79            [ 4]  707 	ld	a, c
   0352 07            [ 4]  708 	rlca
   0353 07            [ 4]  709 	rlca
   0354 07            [ 4]  710 	rlca
   0355 E6 F8         [ 7]  711 	and	a, #0xf8
   0357 C6 05         [ 7]  712 	add	a, #0x05
   0359 47            [ 4]  713 	ld	b, a
   035A C5            [11]  714 	push	bc
   035B 58            [ 4]  715 	ld	e, b
   035C D5            [11]  716 	push	de
   035D CDr00r00      [17]  717 	call	_GetBackBufferPtr
   0360 F1            [10]  718 	pop	af
   0361 C1            [10]  719 	pop	bc
   0362 33            [ 6]  720 	inc	sp
   0363 33            [ 6]  721 	inc	sp
   0364 E5            [11]  722 	push	hl
                            723 ;src/drawing.c:267: u8 colorPaletteStar = (i + sColorAnim++) % NB_COLORS_STAR;
   0365 59            [ 4]  724 	ld	e, c
   0366 16 00         [ 7]  725 	ld	d, #0x00
   0368 FD 21rB6r01   [14]  726 	ld	iy, #_DrawStars_sColorAnim_1_154
   036C FD 46 00      [19]  727 	ld	b, 0 (iy)
   036F FD 34 00      [23]  728 	inc	0 (iy)
   0372 26 00         [ 7]  729 	ld	h, #0x00
   0374 68            [ 4]  730 	ld	l, b
   0375 19            [11]  731 	add	hl, de
   0376 C5            [11]  732 	push	bc
   0377 11 07 00      [10]  733 	ld	de, #0x0007
   037A D5            [11]  734 	push	de
   037B E5            [11]  735 	push	hl
   037C CDr00r00      [17]  736 	call	__modsint
   037F F1            [10]  737 	pop	af
   0380 F1            [10]  738 	pop	af
   0381 5D            [ 4]  739 	ld	e, l
   0382 C1            [10]  740 	pop	bc
                            741 ;src/drawing.c:270: u16 replacePatColor = cpct_pens2pixelPatternPairM0(15, sColorStar[colorPaletteStar]);
   0383 21r0Er04      [10]  742 	ld	hl, #_DrawStars_sColorStar_1_154
   0386 16 00         [ 7]  743 	ld	d, #0x00
   0388 19            [11]  744 	add	hl, de
   0389 46            [ 7]  745 	ld	b, (hl)
   038A C5            [11]  746 	push	bc
   038B 3E 0F         [ 7]  747 	ld	a, #0x0f
   038D F5            [11]  748 	push	af
   038E 33            [ 6]  749 	inc	sp
   038F C5            [11]  750 	push	bc
   0390 33            [ 6]  751 	inc	sp
   0391 CDr00r00      [17]  752 	call	_cpct_pens2pixelPatternPairM0_real
   0394 EB            [ 4]  753 	ex	de,hl
   0395 C1            [10]  754 	pop	bc
                            755 ;src/drawing.c:272: if ((i%3) == 0)
   0396 C5            [11]  756 	push	bc
   0397 D5            [11]  757 	push	de
   0398 06 03         [ 7]  758 	ld	b, #0x03
   039A C5            [11]  759 	push	bc
   039B CDr00r00      [17]  760 	call	__moduchar
   039E F1            [10]  761 	pop	af
   039F D1            [10]  762 	pop	de
   03A0 C1            [10]  763 	pop	bc
   03A1 7D            [ 4]  764 	ld	a, l
   03A2 B7            [ 4]  765 	or	a, a
   03A3 20 31         [12]  766 	jr	NZ,00105$
                            767 ;src/drawing.c:275: cpct_memcpy(gSpriteColorized, g_circle_trans, G_CIRCLE_TRANS_W * G_CIRCLE_TRANS_H * 2);
   03A5 C5            [11]  768 	push	bc
   03A6 D5            [11]  769 	push	de
   03A7 21 18 00      [10]  770 	ld	hl, #0x0018
   03AA E5            [11]  771 	push	hl
   03AB 21r00r00      [10]  772 	ld	hl, #_g_circle_trans
   03AE E5            [11]  773 	push	hl
   03AF 21r00r00      [10]  774 	ld	hl, #_gSpriteColorized
   03B2 E5            [11]  775 	push	hl
   03B3 CDr00r00      [17]  776 	call	_cpct_memcpy
   03B6 D1            [10]  777 	pop	de
   03B7 21r00r00      [10]  778 	ld	hl, #_gSpriteColorized
   03BA E5            [11]  779 	push	hl
   03BB 21 0C 00      [10]  780 	ld	hl, #0x000c
   03BE E5            [11]  781 	push	hl
   03BF D5            [11]  782 	push	de
   03C0 CDr00r00      [17]  783 	call	_cpct_spriteMaskedColourizeM0
   03C3 C1            [10]  784 	pop	bc
                            785 ;src/drawing.c:281: cpct_drawSpriteMasked(gSpriteColorized, pvmem, G_CIRCLE_TRANS_W, G_CIRCLE_TRANS_H);
   03C4 D1            [10]  786 	pop	de
   03C5 D5            [11]  787 	push	de
   03C6 C5            [11]  788 	push	bc
   03C7 21 02 06      [10]  789 	ld	hl, #0x0602
   03CA E5            [11]  790 	push	hl
   03CB D5            [11]  791 	push	de
   03CC 21r00r00      [10]  792 	ld	hl, #_gSpriteColorized
   03CF E5            [11]  793 	push	hl
   03D0 CDr00r00      [17]  794 	call	_cpct_drawSpriteMasked
   03D3 C1            [10]  795 	pop	bc
   03D4 18 2F         [12]  796 	jr	00110$
   03D6                     797 00105$:
                            798 ;src/drawing.c:283: else if ((i%3) == 1)
   03D6 2D            [ 4]  799 	dec	l
   03D7 20 17         [12]  800 	jr	NZ,00102$
                            801 ;src/drawing.c:286: cpct_drawSpriteColorizeM0(g_square, pvmem, G_SQUARE_W, G_SQUARE_H, replacePatColor);
   03D9 C5            [11]  802 	push	bc
   03DA D5            [11]  803 	push	de
   03DB 21 01 04      [10]  804 	ld	hl, #0x0401
   03DE E5            [11]  805 	push	hl
   03DF DD 6E FE      [19]  806 	ld	l,-2 (ix)
   03E2 DD 66 FF      [19]  807 	ld	h,-1 (ix)
   03E5 E5            [11]  808 	push	hl
   03E6 21r00r00      [10]  809 	ld	hl, #_g_square
   03E9 E5            [11]  810 	push	hl
   03EA CDr00r00      [17]  811 	call	_cpct_drawSpriteColorizeM0
   03ED C1            [10]  812 	pop	bc
   03EE 18 15         [12]  813 	jr	00110$
   03F0                     814 00102$:
                            815 ;src/drawing.c:291: cpct_drawSpriteMaskedColorizeM0(g_star_trans, pvmem, G_STAR_TRANS_W, G_STAR_TRANS_H, replacePatColor);
   03F0 C5            [11]  816 	push	bc
   03F1 D5            [11]  817 	push	de
   03F2 21 02 06      [10]  818 	ld	hl, #0x0602
   03F5 E5            [11]  819 	push	hl
   03F6 DD 6E FE      [19]  820 	ld	l,-2 (ix)
   03F9 DD 66 FF      [19]  821 	ld	h,-1 (ix)
   03FC E5            [11]  822 	push	hl
   03FD 21r00r00      [10]  823 	ld	hl, #_g_star_trans
   0400 E5            [11]  824 	push	hl
   0401 CDr00r00      [17]  825 	call	_cpct_drawSpriteMaskedColorizeM0
   0404 C1            [10]  826 	pop	bc
   0405                     827 00110$:
                            828 ;src/drawing.c:261: for (u8 i = 0; i < NB_STARS; i++)
   0405 0C            [ 4]  829 	inc	c
   0406 C3r48r03      [10]  830 	jp	00109$
   0409                     831 00111$:
   0409 DD F9         [10]  832 	ld	sp, ix
   040B DD E1         [14]  833 	pop	ix
   040D C9            [10]  834 	ret
   040E                     835 _DrawStars_sColorStar_1_154:
   040E 02                  836 	.db #0x02	; 2
   040F 04                  837 	.db #0x04	; 4
   0410 07                  838 	.db #0x07	; 7
   0411 08                  839 	.db #0x08	; 8
   0412 0A                  840 	.db #0x0a	; 10
   0413 0B                  841 	.db #0x0b	; 11
   0414 0C                  842 	.db #0x0c	; 12
                            843 ;src/drawing.c:299: void DrawCloud()
                            844 ;	---------------------------------
                            845 ; Function DrawCloud
                            846 ; ---------------------------------
   0415                     847 _DrawCloud::
                            848 ;src/drawing.c:302: u8* pvmem = GetBackBufferPtr(0, POS_CLOUD_Y);
   0415 21 00 14      [10]  849 	ld	hl, #0x1400
   0418 E5            [11]  850 	push	hl
   0419 CDr00r00      [17]  851 	call	_GetBackBufferPtr
   041C F1            [10]  852 	pop	af
                            853 ;src/drawing.c:303: cpct_drawSprite(g_cloud, pvmem, G_CLOUD_W, G_CLOUD_H);
   041D 01r00r00      [10]  854 	ld	bc, #_g_cloud+0
   0420 11 1F 36      [10]  855 	ld	de, #0x361f
   0423 D5            [11]  856 	push	de
   0424 E5            [11]  857 	push	hl
   0425 C5            [11]  858 	push	bc
   0426 CDr00r00      [17]  859 	call	_cpct_drawSprite
   0429 C9            [10]  860 	ret
                            861 ;src/drawing.c:309: void DrawSceneBalloons()
                            862 ;	---------------------------------
                            863 ; Function DrawSceneBalloons
                            864 ; ---------------------------------
   042A                     865 _DrawSceneBalloons::
   042A DD E5         [15]  866 	push	ix
   042C DD 21 00 00   [14]  867 	ld	ix,#0
   0430 DD 39         [15]  868 	add	ix,sp
   0432 3B            [ 6]  869 	dec	sp
                            870 ;src/drawing.c:312: SBalloon* itBalloon = gBalloons.balloons; // Get first balloon pointer
   0433 01r58r01      [10]  871 	ld	bc, #(_gBalloons + 0x0001)
                            872 ;src/drawing.c:313: for (u8 i = 0; i < gBalloons.nb; i++)
   0436 1E 00         [ 7]  873 	ld	e, #0x00
   0438                     874 00107$:
   0438 21r57r01      [10]  875 	ld	hl, #_gBalloons + 0
   043B 56            [ 7]  876 	ld	d, (hl)
   043C 7B            [ 4]  877 	ld	a, e
   043D 92            [ 4]  878 	sub	a, d
   043E 30 12         [12]  879 	jr	NC,00101$
                            880 ;src/drawing.c:315: ClearBalloon(itBalloon);
   0440 C5            [11]  881 	push	bc
   0441 D5            [11]  882 	push	de
   0442 C5            [11]  883 	push	bc
   0443 CDr8Cr00      [17]  884 	call	_ClearBalloon
   0446 F1            [10]  885 	pop	af
   0447 D1            [10]  886 	pop	de
   0448 C1            [10]  887 	pop	bc
                            888 ;src/drawing.c:316: itBalloon++;
   0449 21 08 00      [10]  889 	ld	hl, #0x0008
   044C 09            [11]  890 	add	hl,bc
   044D 4D            [ 4]  891 	ld	c, l
   044E 44            [ 4]  892 	ld	b, h
                            893 ;src/drawing.c:313: for (u8 i = 0; i < gBalloons.nb; i++)
   044F 1C            [ 4]  894 	inc	e
   0450 18 E6         [12]  895 	jr	00107$
   0452                     896 00101$:
                            897 ;src/drawing.c:320: DrawCloud();
   0452 CDr15r04      [17]  898 	call	_DrawCloud
                            899 ;src/drawing.c:323: itBalloon = gBalloons.balloons; // Get first balloon pointer
   0455 01r58r01      [10]  900 	ld	bc, #(_gBalloons + 0x0001)
                            901 ;src/drawing.c:324: for (u8 i = 0; i < gBalloons.nb; i++)
   0458 DD 36 FF 00   [19]  902 	ld	-1 (ix), #0x00
   045C                     903 00110$:
   045C 21r57r01      [10]  904 	ld	hl, #_gBalloons + 0
   045F 5E            [ 7]  905 	ld	e, (hl)
   0460 DD 7E FF      [19]  906 	ld	a, -1 (ix)
   0463 93            [ 4]  907 	sub	a, e
   0464 30 35         [12]  908 	jr	NC,00112$
                            909 ;src/drawing.c:327: if (itBalloon->color > 1) // Color 0 and 1 are default color balloon
   0466 C5            [11]  910 	push	bc
   0467 FD E1         [14]  911 	pop	iy
   0469 FD 56 06      [19]  912 	ld	d, 6 (iy)
   046C 3E 01         [ 7]  913 	ld	a, #0x01
   046E 92            [ 4]  914 	sub	a, d
   046F 30 13         [12]  915 	jr	NC,00103$
                            916 ;src/drawing.c:329: u8* sprite = ColorSprite(itBalloon->color); // Change colors of balloon
   0471 C5            [11]  917 	push	bc
   0472 D5            [11]  918 	push	de
   0473 33            [ 6]  919 	inc	sp
   0474 CDr12r00      [17]  920 	call	_ColorSprite
   0477 33            [ 6]  921 	inc	sp
   0478 C1            [10]  922 	pop	bc
                            923 ;src/drawing.c:330: DrawBalloon(itBalloon, sprite);              // And draw colored balloon
   0479 C5            [11]  924 	push	bc
   047A E5            [11]  925 	push	hl
   047B C5            [11]  926 	push	bc
   047C CDr85r02      [17]  927 	call	_DrawBalloon
   047F F1            [10]  928 	pop	af
   0480 F1            [10]  929 	pop	af
   0481 C1            [10]  930 	pop	bc
   0482 18 0C         [12]  931 	jr	00104$
   0484                     932 00103$:
                            933 ;src/drawing.c:333: DrawBalloon(itBalloon, g_balloon);           // Draw default balloon sprite (blue)
   0484 C5            [11]  934 	push	bc
   0485 21r00r00      [10]  935 	ld	hl, #_g_balloon
   0488 E5            [11]  936 	push	hl
   0489 C5            [11]  937 	push	bc
   048A CDr85r02      [17]  938 	call	_DrawBalloon
   048D F1            [10]  939 	pop	af
   048E F1            [10]  940 	pop	af
   048F C1            [10]  941 	pop	bc
   0490                     942 00104$:
                            943 ;src/drawing.c:335: itBalloon++; // Get next balloon
   0490 21 08 00      [10]  944 	ld	hl, #0x0008
   0493 09            [11]  945 	add	hl,bc
   0494 4D            [ 4]  946 	ld	c, l
   0495 44            [ 4]  947 	ld	b, h
                            948 ;src/drawing.c:324: for (u8 i = 0; i < gBalloons.nb; i++)
   0496 DD 34 FF      [23]  949 	inc	-1 (ix)
   0499 18 C1         [12]  950 	jr	00110$
   049B                     951 00112$:
   049B 33            [ 6]  952 	inc	sp
   049C DD E1         [14]  953 	pop	ix
   049E C9            [10]  954 	ret
                            955 ;src/drawing.c:342: void DrawBackground()
                            956 ;	---------------------------------
                            957 ; Function DrawBackground
                            958 ; ---------------------------------
   049F                     959 _DrawBackground::
                            960 ;src/drawing.c:347: cpct_memset((u8*)SCREEN_BUFF, gBackGroundColor, VMEM_SIZE);
   049F 21 00 40      [10]  961 	ld	hl, #0x4000
   04A2 E5            [11]  962 	push	hl
   04A3 3Ar54r01      [13]  963 	ld	a, (_gBackGroundColor)
   04A6 F5            [11]  964 	push	af
   04A7 33            [ 6]  965 	inc	sp
   04A8 26 80         [ 7]  966 	ld	h, #0x80
   04AA E5            [11]  967 	push	hl
   04AB CDr00r00      [17]  968 	call	_cpct_memset
                            969 ;src/drawing.c:350: pvmem = GetBackBufferPtr(0, SCREEN_CY - G_ROOF_H);
   04AE 21 00 B4      [10]  970 	ld	hl, #0xb400
   04B1 E5            [11]  971 	push	hl
   04B2 CDr00r00      [17]  972 	call	_GetBackBufferPtr
   04B5 F1            [10]  973 	pop	af
   04B6 4D            [ 4]  974 	ld	c, l
   04B7 44            [ 4]  975 	ld	b, h
                            976 ;src/drawing.c:351: cpct_drawSprite(g_roof, pvmem, G_ROOF_W, G_ROOF_H);
   04B8 59            [ 4]  977 	ld	e, c
   04B9 50            [ 4]  978 	ld	d, b
   04BA C5            [11]  979 	push	bc
   04BB 21 28 14      [10]  980 	ld	hl, #0x1428
   04BE E5            [11]  981 	push	hl
   04BF D5            [11]  982 	push	de
   04C0 21r00r00      [10]  983 	ld	hl, #_g_roof
   04C3 E5            [11]  984 	push	hl
   04C4 CDr00r00      [17]  985 	call	_cpct_drawSprite
   04C7 C1            [10]  986 	pop	bc
                            987 ;src/drawing.c:354: pvmem += G_ROOF_W;
   04C8 21 28 00      [10]  988 	ld	hl, #0x0028
   04CB 09            [11]  989 	add	hl, bc
                            990 ;src/drawing.c:355: cpct_drawSprite(g_roof, pvmem, G_ROOF_W, G_ROOF_H);
   04CC 01 28 14      [10]  991 	ld	bc, #0x1428
   04CF C5            [11]  992 	push	bc
   04D0 E5            [11]  993 	push	hl
   04D1 21r00r00      [10]  994 	ld	hl, #_g_roof
   04D4 E5            [11]  995 	push	hl
   04D5 CDr00r00      [17]  996 	call	_cpct_drawSprite
                            997 ;src/drawing.c:358: cpct_memcpy(CPCT_VMEM_START, (u8*)SCREEN_BUFF, VMEM_SIZE);
   04D8 21 00 40      [10]  998 	ld	hl, #0x4000
   04DB E5            [11]  999 	push	hl
   04DC 26 80         [ 7] 1000 	ld	h, #0x80
   04DE E5            [11] 1001 	push	hl
   04DF 26 C0         [ 7] 1002 	ld	h, #0xc0
   04E1 E5            [11] 1003 	push	hl
   04E2 CDr00r00      [17] 1004 	call	_cpct_memcpy
   04E5 C9            [10] 1005 	ret
                           1006 ;src/drawing.c:366: void InitializeDrawing()
                           1007 ;	---------------------------------
                           1008 ; Function InitializeDrawing
                           1009 ; ---------------------------------
   04E6                    1010 _InitializeDrawing::
                           1011 ;src/drawing.c:368: gBackGroundColor = cpctm_px2byteM0(14, 14);             // Get byte color of background for M0
   04E6 21r54r01      [10] 1012 	ld	hl,#_gBackGroundColor + 0
   04E9 36 3F         [10] 1013 	ld	(hl), #0x3f
                           1014 ;src/drawing.c:369: gBalloons.nb = 0;                                       // No balloon to draw at start
   04EB 21r57r01      [10] 1015 	ld	hl, #_gBalloons
   04EE 36 00         [10] 1016 	ld	(hl), #0x00
                           1017 ;src/drawing.c:370: DrawBackground();                                       // Set background on both buffers
   04F0 C3r9Fr04      [10] 1018 	jp  _DrawBackground
                           1019 	.area _CODE
                           1020 	.area _INITIALIZER
                           1021 	.area _CABS (ABS)
