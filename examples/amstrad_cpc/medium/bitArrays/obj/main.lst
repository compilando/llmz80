                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _printArray
                             13 	.globl _cpct_setVideoMode
                             14 	.globl _cpct_drawCharM2
                             15 	.globl _cpct_setDrawCharM2
                             16 	.globl _cpct_set4Bits
                             17 	.globl _cpct_set2Bits
                             18 	.globl _cpct_setBit
                             19 	.globl _cpct_get4Bits
                             20 	.globl _cpct_get2Bits
                             21 	.globl _cpct_getBit
                             22 	.globl _cpct_memset
                             23 	.globl _cpct_disableFirmware
                             24 ;--------------------------------------------------------
                             25 ; special function registers
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DATA
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;src/main.c:35: void printArray(u8* pvideomem, void *array, u8 nItems, TFunc thefunction) {
                             56 ;	---------------------------------
                             57 ; Function printArray
                             58 ; ---------------------------------
   0000                      59 _printArray::
   0000 DD E5         [15]   60 	push	ix
   0002 DD 21 00 00   [14]   61 	ld	ix,#0
   0006 DD 39         [15]   62 	add	ix,sp
   0008 21 F8 FF      [10]   63 	ld	hl, #-8
   000B 39            [11]   64 	add	hl, sp
   000C F9            [ 6]   65 	ld	sp, hl
                             66 ;src/main.c:36: u8 out = 0; // Value returned by getBit functions [0-15]
   000D 0E 00         [ 7]   67 	ld	c, #0x00
                             68 ;src/main.c:41: for (i = 0; i < nItems; ++i) {
   000F DD 7E 09      [19]   69 	ld	a, 9 (ix)
   0012 B7            [ 4]   70 	or	a, a
   0013 20 04         [12]   71 	jr	NZ,00145$
   0015 3E 01         [ 7]   72 	ld	a,#0x01
   0017 18 01         [12]   73 	jr	00146$
   0019                      74 00145$:
   0019 AF            [ 4]   75 	xor	a,a
   001A                      76 00146$:
   001A DD 77 FF      [19]   77 	ld	-1 (ix), a
   001D DD 7E 09      [19]   78 	ld	a, 9 (ix)
   0020 3D            [ 4]   79 	dec	a
   0021 20 04         [12]   80 	jr	NZ,00147$
   0023 3E 01         [ 7]   81 	ld	a,#0x01
   0025 18 01         [12]   82 	jr	00148$
   0027                      83 00147$:
   0027 AF            [ 4]   84 	xor	a,a
   0028                      85 00148$:
   0028 DD 77 F9      [19]   86 	ld	-7 (ix), a
   002B DD 7E 09      [19]   87 	ld	a, 9 (ix)
   002E D6 02         [ 7]   88 	sub	a, #0x02
   0030 20 04         [12]   89 	jr	NZ,00149$
   0032 3E 01         [ 7]   90 	ld	a,#0x01
   0034 18 01         [12]   91 	jr	00150$
   0036                      92 00149$:
   0036 AF            [ 4]   93 	xor	a,a
   0037                      94 00150$:
   0037 DD 77 FA      [19]   95 	ld	-6 (ix), a
   003A DD 7E 04      [19]   96 	ld	a, 4 (ix)
   003D DD 77 FB      [19]   97 	ld	-5 (ix), a
   0040 DD 7E 05      [19]   98 	ld	a, 5 (ix)
   0043 DD 77 FC      [19]   99 	ld	-4 (ix), a
   0046 DD 36 F8 00   [19]  100 	ld	-8 (ix), #0x00
   004A                     101 00110$:
   004A DD 7E F8      [19]  102 	ld	a, -8 (ix)
   004D DD 96 08      [19]  103 	sub	a, 8 (ix)
   0050 D2rDDr00      [10]  104 	jp	NC, 00112$
                            105 ;src/main.c:48: case f_getbit:   out = (cpct_getBit (array, i) > 0); break;
   0053 DD 7E F8      [19]  106 	ld	a, -8 (ix)
   0056 DD 77 FD      [19]  107 	ld	-3 (ix), a
   0059 DD 36 FE 00   [19]  108 	ld	-2 (ix), #0x00
                            109 ;src/main.c:45: switch(thefunction) {
   005D DD 7E FF      [19]  110 	ld	a, -1 (ix)
   0060 B7            [ 4]  111 	or	a, a
   0061 20 0E         [12]  112 	jr	NZ,00101$
   0063 DD 7E F9      [19]  113 	ld	a, -7 (ix)
   0066 B7            [ 4]  114 	or	a, a
   0067 20 25         [12]  115 	jr	NZ,00102$
   0069 DD 7E FA      [19]  116 	ld	a, -6 (ix)
   006C B7            [ 4]  117 	or	a, a
   006D 20 33         [12]  118 	jr	NZ,00103$
   006F 18 43         [12]  119 	jr	00104$
                            120 ;src/main.c:48: case f_getbit:   out = (cpct_getBit (array, i) > 0); break;
   0071                     121 00101$:
   0071 DD 6E FD      [19]  122 	ld	l,-3 (ix)
   0074 DD 66 FE      [19]  123 	ld	h,-2 (ix)
   0077 E5            [11]  124 	push	hl
   0078 DD 6E 06      [19]  125 	ld	l,6 (ix)
   007B DD 66 07      [19]  126 	ld	h,7 (ix)
   007E E5            [11]  127 	push	hl
   007F CDr00r00      [17]  128 	call	_cpct_getBit
   0082 7D            [ 4]  129 	ld	a, l
   0083 B7            [ 4]  130 	or	a, a
   0084 28 04         [12]  131 	jr	Z,00114$
   0086 0E 01         [ 7]  132 	ld	c, #0x01
   0088 18 2A         [12]  133 	jr	00104$
   008A                     134 00114$:
   008A 0E 00         [ 7]  135 	ld	c, #0x00
   008C 18 26         [12]  136 	jr	00104$
                            137 ;src/main.c:51: case f_get2bits: out = cpct_get2Bits(array, i); break;
   008E                     138 00102$:
   008E DD 6E FD      [19]  139 	ld	l,-3 (ix)
   0091 DD 66 FE      [19]  140 	ld	h,-2 (ix)
   0094 E5            [11]  141 	push	hl
   0095 DD 6E 06      [19]  142 	ld	l,6 (ix)
   0098 DD 66 07      [19]  143 	ld	h,7 (ix)
   009B E5            [11]  144 	push	hl
   009C CDr00r00      [17]  145 	call	_cpct_get2Bits
   009F 4D            [ 4]  146 	ld	c, l
   00A0 18 12         [12]  147 	jr	00104$
                            148 ;src/main.c:54: case f_get4bits: out = cpct_get4Bits(array, i); break;
   00A2                     149 00103$:
   00A2 DD 6E FD      [19]  150 	ld	l,-3 (ix)
   00A5 DD 66 FE      [19]  151 	ld	h,-2 (ix)
   00A8 E5            [11]  152 	push	hl
   00A9 DD 6E 06      [19]  153 	ld	l,6 (ix)
   00AC DD 66 07      [19]  154 	ld	h,7 (ix)
   00AF E5            [11]  155 	push	hl
   00B0 CDr00r00      [17]  156 	call	_cpct_get4Bits
   00B3 4D            [ 4]  157 	ld	c, l
                            158 ;src/main.c:55: }
   00B4                     159 00104$:
                            160 ;src/main.c:58: if (out) 
   00B4 79            [ 4]  161 	ld	a, c
   00B5 B7            [ 4]  162 	or	a, a
   00B6 28 06         [12]  163 	jr	Z,00106$
                            164 ;src/main.c:59: c = '0' + out;
   00B8 79            [ 4]  165 	ld	a, c
   00B9 C6 30         [ 7]  166 	add	a, #0x30
   00BB 5F            [ 4]  167 	ld	e, a
   00BC 18 02         [12]  168 	jr	00107$
   00BE                     169 00106$:
                            170 ;src/main.c:61: c = '_';
   00BE 1E 5F         [ 7]  171 	ld	e, #0x5f
   00C0                     172 00107$:
                            173 ;src/main.c:65: cpct_drawCharM2(pvideomem, c);
   00C0 16 00         [ 7]  174 	ld	d, #0x00
   00C2 DD 6E FB      [19]  175 	ld	l,-5 (ix)
   00C5 DD 66 FC      [19]  176 	ld	h,-4 (ix)
   00C8 C5            [11]  177 	push	bc
   00C9 D5            [11]  178 	push	de
   00CA E5            [11]  179 	push	hl
   00CB CDr00r00      [17]  180 	call	_cpct_drawCharM2
   00CE C1            [10]  181 	pop	bc
                            182 ;src/main.c:66: pvideomem++;
   00CF DD 34 FB      [23]  183 	inc	-5 (ix)
   00D2 20 03         [12]  184 	jr	NZ,00151$
   00D4 DD 34 FC      [23]  185 	inc	-4 (ix)
   00D7                     186 00151$:
                            187 ;src/main.c:41: for (i = 0; i < nItems; ++i) {
   00D7 DD 34 F8      [23]  188 	inc	-8 (ix)
   00DA C3r4Ar00      [10]  189 	jp	00110$
   00DD                     190 00112$:
   00DD DD F9         [10]  191 	ld	sp, ix
   00DF DD E1         [14]  192 	pop	ix
   00E1 C9            [10]  193 	ret
                            194 ;src/main.c:73: void main (void) {
                            195 ;	---------------------------------
                            196 ; Function main
                            197 ; ---------------------------------
   00E2                     198 _main::
   00E2 DD E5         [15]  199 	push	ix
   00E4 DD 21 00 00   [14]  200 	ld	ix,#0
   00E8 DD 39         [15]  201 	add	ix,sp
   00EA 21 AD FF      [10]  202 	ld	hl, #-83
   00ED 39            [11]  203 	add	hl, sp
   00EE F9            [ 6]  204 	ld	sp, hl
                            205 ;src/main.c:81: cpct_disableFirmware();
   00EF CDr00r00      [17]  206 	call	_cpct_disableFirmware
                            207 ;src/main.c:84: cpct_setVideoMode(2);
   00F2 2E 02         [ 7]  208 	ld	l, #0x02
   00F4 CDr00r00      [17]  209 	call	_cpct_setVideoMode
                            210 ;src/main.c:85: cpct_setDrawCharM2(1, 0); // Draw characters in Foreground colour
   00F7 21 01 00      [10]  211 	ld	hl, #0x0001
   00FA E5            [11]  212 	push	hl
   00FB CDr00r00      [17]  213 	call	_cpct_setDrawCharM2
                            214 ;src/main.c:90: while(1) {
   00FE                     215 00110$:
                            216 ;src/main.c:93: cpct_memset(array1, 0, 10);
   00FE 21 3D 00      [10]  217 	ld	hl, #0x003d
   0101 39            [11]  218 	add	hl, sp
   0102 DD 75 FE      [19]  219 	ld	-2 (ix), l
   0105 DD 74 FF      [19]  220 	ld	-1 (ix), h
   0108 4D            [ 4]  221 	ld	c, l
   0109 44            [ 4]  222 	ld	b, h
   010A 21 0A 00      [10]  223 	ld	hl, #0x000a
   010D E5            [11]  224 	push	hl
   010E AF            [ 4]  225 	xor	a, a
   010F F5            [11]  226 	push	af
   0110 33            [ 6]  227 	inc	sp
   0111 C5            [11]  228 	push	bc
   0112 CDr00r00      [17]  229 	call	_cpct_memset
                            230 ;src/main.c:94: cpct_memset(array2, 0, 20);
   0115 21 29 00      [10]  231 	ld	hl, #0x0029
   0118 39            [11]  232 	add	hl, sp
   0119 DD 75 F8      [19]  233 	ld	-8 (ix), l
   011C DD 74 F9      [19]  234 	ld	-7 (ix), h
   011F 4D            [ 4]  235 	ld	c, l
   0120 44            [ 4]  236 	ld	b, h
   0121 21 14 00      [10]  237 	ld	hl, #0x0014
   0124 E5            [11]  238 	push	hl
   0125 AF            [ 4]  239 	xor	a, a
   0126 F5            [11]  240 	push	af
   0127 33            [ 6]  241 	inc	sp
   0128 C5            [11]  242 	push	bc
   0129 CDr00r00      [17]  243 	call	_cpct_memset
                            244 ;src/main.c:95: cpct_memset(array4, 0, 40);
   012C 21 01 00      [10]  245 	ld	hl, #0x0001
   012F 39            [11]  246 	add	hl, sp
   0130 4D            [ 4]  247 	ld	c, l
   0131 44            [ 4]  248 	ld	b, h
   0132 59            [ 4]  249 	ld	e, c
   0133 50            [ 4]  250 	ld	d, b
   0134 C5            [11]  251 	push	bc
   0135 21 28 00      [10]  252 	ld	hl, #0x0028
   0138 E5            [11]  253 	push	hl
   0139 AF            [ 4]  254 	xor	a, a
   013A F5            [11]  255 	push	af
   013B 33            [ 6]  256 	inc	sp
   013C D5            [11]  257 	push	de
   013D CDr00r00      [17]  258 	call	_cpct_memset
   0140 C1            [10]  259 	pop	bc
                            260 ;src/main.c:100: for (i = 0; i < 80; ++i) {
   0141 DD 7E FE      [19]  261 	ld	a, -2 (ix)
   0144 DD 77 FA      [19]  262 	ld	-6 (ix), a
   0147 DD 7E FF      [19]  263 	ld	a, -1 (ix)
   014A DD 77 FB      [19]  264 	ld	-5 (ix), a
   014D DD 7E FE      [19]  265 	ld	a, -2 (ix)
   0150 DD 77 FC      [19]  266 	ld	-4 (ix), a
   0153 DD 7E FF      [19]  267 	ld	a, -1 (ix)
   0156 DD 77 FD      [19]  268 	ld	-3 (ix), a
   0159 DD 7E FE      [19]  269 	ld	a, -2 (ix)
   015C DD 77 F6      [19]  270 	ld	-10 (ix), a
   015F DD 7E FF      [19]  271 	ld	a, -1 (ix)
   0162 DD 77 F7      [19]  272 	ld	-9 (ix), a
   0165 DD 36 F5 00   [19]  273 	ld	-11 (ix), #0x00
   0169                     274 00112$:
                            275 ;src/main.c:102: cpct_setBit(array1, 1, i);
   0169 DD 6E F5      [19]  276 	ld	l, -11 (ix)
   016C 26 00         [ 7]  277 	ld	h, #0x00
   016E DD 5E FA      [19]  278 	ld	e, -6 (ix)
   0171 DD 56 FB      [19]  279 	ld	d, -5 (ix)
   0174 D5            [11]  280 	push	de
   0175 FD E1         [14]  281 	pop	iy
   0177 E5            [11]  282 	push	hl
   0178 C5            [11]  283 	push	bc
   0179 E5            [11]  284 	push	hl
   017A 11 01 00      [10]  285 	ld	de, #0x0001
   017D D5            [11]  286 	push	de
   017E FD E5         [15]  287 	push	iy
   0180 CDr00r00      [17]  288 	call	_cpct_setBit
   0183 C1            [10]  289 	pop	bc
   0184 E1            [10]  290 	pop	hl
                            291 ;src/main.c:105: printArray(CPCT_VMEM_START, array1, 80, f_getbit); 
   0185 DD 5E FC      [19]  292 	ld	e, -4 (ix)
   0188 DD 56 FD      [19]  293 	ld	d, -3 (ix)
   018B D5            [11]  294 	push	de
   018C FD E1         [14]  295 	pop	iy
   018E E5            [11]  296 	push	hl
   018F C5            [11]  297 	push	bc
   0190 11 50 00      [10]  298 	ld	de, #0x0050
   0193 D5            [11]  299 	push	de
   0194 FD E5         [15]  300 	push	iy
   0196 11 00 C0      [10]  301 	ld	de, #0xc000
   0199 D5            [11]  302 	push	de
   019A CDr00r00      [17]  303 	call	_printArray
   019D 21 06 00      [10]  304 	ld	hl, #6
   01A0 39            [11]  305 	add	hl, sp
   01A1 F9            [ 6]  306 	ld	sp, hl
   01A2 C1            [10]  307 	pop	bc
   01A3 E1            [10]  308 	pop	hl
                            309 ;src/main.c:108: cpct_setBit(array1, 0, i);
   01A4 DD 5E F6      [19]  310 	ld	e,-10 (ix)
   01A7 DD 56 F7      [19]  311 	ld	d,-9 (ix)
   01AA C5            [11]  312 	push	bc
   01AB E5            [11]  313 	push	hl
   01AC 21 00 00      [10]  314 	ld	hl, #0x0000
   01AF E5            [11]  315 	push	hl
   01B0 D5            [11]  316 	push	de
   01B1 CDr00r00      [17]  317 	call	_cpct_setBit
   01B4 C1            [10]  318 	pop	bc
                            319 ;src/main.c:100: for (i = 0; i < 80; ++i) {
   01B5 DD 34 F5      [23]  320 	inc	-11 (ix)
   01B8 DD 7E F5      [19]  321 	ld	a, -11 (ix)
   01BB D6 50         [ 7]  322 	sub	a, #0x50
   01BD 38 AA         [12]  323 	jr	C,00112$
                            324 ;src/main.c:115: for (j = 3; j > 0; --j) { 
   01BF DD 7E F8      [19]  325 	ld	a, -8 (ix)
   01C2 DD 77 F6      [19]  326 	ld	-10 (ix), a
   01C5 DD 7E F9      [19]  327 	ld	a, -7 (ix)
   01C8 DD 77 F7      [19]  328 	ld	-9 (ix), a
   01CB DD 7E F8      [19]  329 	ld	a, -8 (ix)
   01CE DD 77 FC      [19]  330 	ld	-4 (ix), a
   01D1 DD 7E F9      [19]  331 	ld	a, -7 (ix)
   01D4 DD 77 FD      [19]  332 	ld	-3 (ix), a
   01D7 DD 7E F8      [19]  333 	ld	a, -8 (ix)
   01DA DD 77 FA      [19]  334 	ld	-6 (ix), a
   01DD DD 7E F9      [19]  335 	ld	a, -7 (ix)
   01E0 DD 77 FB      [19]  336 	ld	-5 (ix), a
   01E3 DD 36 F4 03   [19]  337 	ld	-12 (ix), #0x03
                            338 ;src/main.c:116: for (i = 0; i < 80; ++i) {
   01E7                     339 00136$:
   01E7 DD 36 F5 00   [19]  340 	ld	-11 (ix), #0x00
   01EB                     341 00114$:
                            342 ;src/main.c:118: cpct_set2Bits(array2, j, i);
   01EB DD 6E F5      [19]  343 	ld	l, -11 (ix)
   01EE 26 00         [ 7]  344 	ld	h, #0x00
   01F0 DD 5E F4      [19]  345 	ld	e, -12 (ix)
   01F3 16 00         [ 7]  346 	ld	d, #0x00
   01F5 E5            [11]  347 	push	hl
   01F6 DD 6E F6      [19]  348 	ld	l, -10 (ix)
   01F9 DD 66 F7      [19]  349 	ld	h, -9 (ix)
   01FC E5            [11]  350 	push	hl
   01FD FD E1         [14]  351 	pop	iy
   01FF E1            [10]  352 	pop	hl
   0200 E5            [11]  353 	push	hl
   0201 C5            [11]  354 	push	bc
   0202 E5            [11]  355 	push	hl
   0203 D5            [11]  356 	push	de
   0204 FD E5         [15]  357 	push	iy
   0206 CDr00r00      [17]  358 	call	_cpct_set2Bits
   0209 C1            [10]  359 	pop	bc
   020A E1            [10]  360 	pop	hl
                            361 ;src/main.c:121: printArray((u8*)0xC0A0, array2, 80, f_get2bits);
   020B DD 5E FC      [19]  362 	ld	e, -4 (ix)
   020E DD 56 FD      [19]  363 	ld	d, -3 (ix)
   0211 D5            [11]  364 	push	de
   0212 FD E1         [14]  365 	pop	iy
   0214 E5            [11]  366 	push	hl
   0215 C5            [11]  367 	push	bc
   0216 11 50 01      [10]  368 	ld	de, #0x0150
   0219 D5            [11]  369 	push	de
   021A FD E5         [15]  370 	push	iy
   021C 11 A0 C0      [10]  371 	ld	de, #0xc0a0
   021F D5            [11]  372 	push	de
   0220 CDr00r00      [17]  373 	call	_printArray
   0223 21 06 00      [10]  374 	ld	hl, #6
   0226 39            [11]  375 	add	hl, sp
   0227 F9            [ 6]  376 	ld	sp, hl
   0228 C1            [10]  377 	pop	bc
   0229 E1            [10]  378 	pop	hl
                            379 ;src/main.c:124: cpct_set2Bits(array2, 0, i);
   022A DD 5E FA      [19]  380 	ld	e,-6 (ix)
   022D DD 56 FB      [19]  381 	ld	d,-5 (ix)
   0230 C5            [11]  382 	push	bc
   0231 E5            [11]  383 	push	hl
   0232 21 00 00      [10]  384 	ld	hl, #0x0000
   0235 E5            [11]  385 	push	hl
   0236 D5            [11]  386 	push	de
   0237 CDr00r00      [17]  387 	call	_cpct_set2Bits
   023A C1            [10]  388 	pop	bc
                            389 ;src/main.c:116: for (i = 0; i < 80; ++i) {
   023B DD 34 F5      [23]  390 	inc	-11 (ix)
   023E DD 7E F5      [19]  391 	ld	a, -11 (ix)
   0241 D6 50         [ 7]  392 	sub	a, #0x50
   0243 38 A6         [12]  393 	jr	C,00114$
                            394 ;src/main.c:115: for (j = 3; j > 0; --j) { 
   0245 DD 35 F4      [23]  395 	dec	-12 (ix)
   0248 DD 7E F4      [19]  396 	ld	a, -12 (ix)
   024B B7            [ 4]  397 	or	a, a
   024C 20 99         [12]  398 	jr	NZ,00136$
                            399 ;src/main.c:133: for (j = 0; j < 16; j++) { 
   024E DD 71 F6      [19]  400 	ld	-10 (ix), c
   0251 DD 70 F7      [19]  401 	ld	-9 (ix), b
   0254 DD 71 FC      [19]  402 	ld	-4 (ix), c
   0257 DD 70 FD      [19]  403 	ld	-3 (ix), b
   025A DD 36 F4 00   [19]  404 	ld	-12 (ix), #0x00
                            405 ;src/main.c:134: for (i = 0; i < 80; ++i) {
   025E                     406 00140$:
   025E DD 36 F5 00   [19]  407 	ld	-11 (ix), #0x00
   0262                     408 00118$:
                            409 ;src/main.c:136: u8 value = (i + j) & 0x0F;
   0262 DD 7E F5      [19]  410 	ld	a, -11 (ix)
   0265 DD 86 F4      [19]  411 	add	a, -12 (ix)
   0268 DD 77 FA      [19]  412 	ld	-6 (ix), a
   026B E6 0F         [ 7]  413 	and	a, #0x0f
   026D DD 77 AD      [19]  414 	ld	-83 (ix), a
                            415 ;src/main.c:139: cpct_set4Bits(array4, value, i);
   0270 DD 7E F5      [19]  416 	ld	a, -11 (ix)
   0273 DD 77 FA      [19]  417 	ld	-6 (ix), a
   0276 DD 36 FB 00   [19]  418 	ld	-5 (ix), #0x00
   027A DD 5E AD      [19]  419 	ld	e, -83 (ix)
   027D 16 00         [ 7]  420 	ld	d, #0x00
   027F DD 4E F6      [19]  421 	ld	c,-10 (ix)
   0282 DD 46 F7      [19]  422 	ld	b,-9 (ix)
   0285 DD 6E FA      [19]  423 	ld	l,-6 (ix)
   0288 DD 66 FB      [19]  424 	ld	h,-5 (ix)
   028B E5            [11]  425 	push	hl
   028C D5            [11]  426 	push	de
   028D C5            [11]  427 	push	bc
   028E CDr00r00      [17]  428 	call	_cpct_set4Bits
                            429 ;src/main.c:140: printArray((u8*)0xC140, array4, 80, f_get4bits);
   0291 DD 4E FC      [19]  430 	ld	c,-4 (ix)
   0294 DD 46 FD      [19]  431 	ld	b,-3 (ix)
   0297 21 50 02      [10]  432 	ld	hl, #0x0250
   029A E5            [11]  433 	push	hl
   029B C5            [11]  434 	push	bc
   029C 21 40 C1      [10]  435 	ld	hl, #0xc140
   029F E5            [11]  436 	push	hl
   02A0 CDr00r00      [17]  437 	call	_printArray
   02A3 21 06 00      [10]  438 	ld	hl, #6
   02A6 39            [11]  439 	add	hl, sp
   02A7 F9            [ 6]  440 	ld	sp, hl
                            441 ;src/main.c:134: for (i = 0; i < 80; ++i) {
   02A8 DD 34 F5      [23]  442 	inc	-11 (ix)
   02AB DD 7E F5      [19]  443 	ld	a, -11 (ix)
   02AE D6 50         [ 7]  444 	sub	a, #0x50
   02B0 38 B0         [12]  445 	jr	C,00118$
                            446 ;src/main.c:133: for (j = 0; j < 16; j++) { 
   02B2 DD 34 F4      [23]  447 	inc	-12 (ix)
   02B5 DD 7E F4      [19]  448 	ld	a, -12 (ix)
   02B8 D6 10         [ 7]  449 	sub	a, #0x10
   02BA 38 A2         [12]  450 	jr	C,00140$
                            451 ;src/main.c:147: for (i = 0; i < 80; ++i) {
   02BC DD 7E FE      [19]  452 	ld	a, -2 (ix)
   02BF DD 77 F6      [19]  453 	ld	-10 (ix), a
   02C2 DD 7E FF      [19]  454 	ld	a, -1 (ix)
   02C5 DD 77 F7      [19]  455 	ld	-9 (ix), a
   02C8 DD 7E FE      [19]  456 	ld	a, -2 (ix)
   02CB DD 77 FC      [19]  457 	ld	-4 (ix), a
   02CE DD 7E FF      [19]  458 	ld	a, -1 (ix)
   02D1 DD 77 FD      [19]  459 	ld	-3 (ix), a
   02D4 DD 36 F5 00   [19]  460 	ld	-11 (ix), #0x00
   02D8                     461 00122$:
                            462 ;src/main.c:149: cpct_setBit(array1, 1, i);
   02D8 DD 5E F5      [19]  463 	ld	e, -11 (ix)
   02DB 16 00         [ 7]  464 	ld	d, #0x00
   02DD DD 4E F6      [19]  465 	ld	c,-10 (ix)
   02E0 DD 46 F7      [19]  466 	ld	b,-9 (ix)
   02E3 D5            [11]  467 	push	de
   02E4 21 01 00      [10]  468 	ld	hl, #0x0001
   02E7 E5            [11]  469 	push	hl
   02E8 C5            [11]  470 	push	bc
   02E9 CDr00r00      [17]  471 	call	_cpct_setBit
                            472 ;src/main.c:152: printArray(CPCT_VMEM_START, array1, 80, f_getbit); 
   02EC DD 4E FC      [19]  473 	ld	c,-4 (ix)
   02EF DD 46 FD      [19]  474 	ld	b,-3 (ix)
   02F2 21 50 00      [10]  475 	ld	hl, #0x0050
   02F5 E5            [11]  476 	push	hl
   02F6 C5            [11]  477 	push	bc
   02F7 21 00 C0      [10]  478 	ld	hl, #0xc000
   02FA E5            [11]  479 	push	hl
   02FB CDr00r00      [17]  480 	call	_printArray
   02FE 21 06 00      [10]  481 	ld	hl, #6
   0301 39            [11]  482 	add	hl, sp
   0302 F9            [ 6]  483 	ld	sp, hl
                            484 ;src/main.c:147: for (i = 0; i < 80; ++i) {
   0303 DD 34 F5      [23]  485 	inc	-11 (ix)
   0306 DD 7E F5      [19]  486 	ld	a, -11 (ix)
   0309 D6 50         [ 7]  487 	sub	a, #0x50
   030B 38 CB         [12]  488 	jr	C,00122$
                            489 ;src/main.c:158: for (j = 3; j > 0; --j) { 
   030D DD 4E F8      [19]  490 	ld	c,-8 (ix)
   0310 DD 46 F9      [19]  491 	ld	b,-7 (ix)
   0313 DD 5E F8      [19]  492 	ld	e,-8 (ix)
   0316 DD 56 F9      [19]  493 	ld	d,-7 (ix)
   0319 DD 36 F4 03   [19]  494 	ld	-12 (ix), #0x03
                            495 ;src/main.c:159: for (i = 0; i < 80; ++i) {
   031D                     496 00146$:
   031D DD 36 F5 00   [19]  497 	ld	-11 (ix), #0x00
   0321                     498 00124$:
                            499 ;src/main.c:161: cpct_set2Bits(array2, j, i);
   0321 DD 6E F5      [19]  500 	ld	l, -11 (ix)
   0324 26 00         [ 7]  501 	ld	h, #0x00
   0326 DD 7E F4      [19]  502 	ld	a, -12 (ix)
   0329 DD 77 F6      [19]  503 	ld	-10 (ix), a
   032C DD 36 F7 00   [19]  504 	ld	-9 (ix), #0x00
   0330 C5            [11]  505 	push	bc
   0331 FD E1         [14]  506 	pop	iy
   0333 C5            [11]  507 	push	bc
   0334 D5            [11]  508 	push	de
   0335 E5            [11]  509 	push	hl
   0336 DD 6E F6      [19]  510 	ld	l,-10 (ix)
   0339 DD 66 F7      [19]  511 	ld	h,-9 (ix)
   033C E5            [11]  512 	push	hl
   033D FD E5         [15]  513 	push	iy
   033F CDr00r00      [17]  514 	call	_cpct_set2Bits
   0342 D1            [10]  515 	pop	de
   0343 C1            [10]  516 	pop	bc
                            517 ;src/main.c:164: printArray((u8*)0xC0A0, array2, 80, f_get2bits); 
   0344 D5            [11]  518 	push	de
   0345 FD E1         [14]  519 	pop	iy
   0347 C5            [11]  520 	push	bc
   0348 D5            [11]  521 	push	de
   0349 21 50 01      [10]  522 	ld	hl, #0x0150
   034C E5            [11]  523 	push	hl
   034D FD E5         [15]  524 	push	iy
   034F 21 A0 C0      [10]  525 	ld	hl, #0xc0a0
   0352 E5            [11]  526 	push	hl
   0353 CDr00r00      [17]  527 	call	_printArray
   0356 21 06 00      [10]  528 	ld	hl, #6
   0359 39            [11]  529 	add	hl, sp
   035A F9            [ 6]  530 	ld	sp, hl
   035B D1            [10]  531 	pop	de
   035C C1            [10]  532 	pop	bc
                            533 ;src/main.c:159: for (i = 0; i < 80; ++i) {
   035D DD 34 F5      [23]  534 	inc	-11 (ix)
   0360 DD 7E F5      [19]  535 	ld	a, -11 (ix)
   0363 D6 50         [ 7]  536 	sub	a, #0x50
   0365 38 BA         [12]  537 	jr	C,00124$
                            538 ;src/main.c:158: for (j = 3; j > 0; --j) { 
   0367 DD 35 F4      [23]  539 	dec	-12 (ix)
   036A DD 7E F4      [19]  540 	ld	a, -12 (ix)
   036D B7            [ 4]  541 	or	a, a
   036E 20 AD         [12]  542 	jr	NZ,00146$
   0370 C3rFEr00      [10]  543 	jp	00110$
                            544 	.area _CODE
                            545 	.area _INITIALIZER
                            546 	.area _CABS (ABS)
