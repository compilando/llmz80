                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _printf
                             13 	.globl _cpct_memset
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;src/main.c:27: void main(void) {
                             46 ;	---------------------------------
                             47 ; Function main
                             48 ; ---------------------------------
   0000                      49 _main::
                             50 ;src/main.c:29: cpct_clearScreen(0);
   0000 21 00 40      [10]   51 	ld	hl, #0x4000
   0003 E5            [11]   52 	push	hl
   0004 AF            [ 4]   53 	xor	a, a
   0005 F5            [11]   54 	push	af
   0006 33            [ 6]   55 	inc	sp
   0007 26 C0         [ 7]   56 	ld	h, #0xc0
   0009 E5            [11]   57 	push	hl
   000A CDr00r00      [17]   58 	call	_cpct_memset
                             59 ;src/main.c:38: printf("      \017\003Welcome to \017\002CPCtelera\017\003!\017\001\n\r\n\r");
   000D 21r9Fr00      [10]   60 	ld	hl, #___str_0
   0010 E5            [11]   61 	push	hl
   0011 CDr00r00      [17]   62 	call	_printf
                             63 ;src/main.c:39: printf("This  example  makes  use  of standard C");
   0014 21rC7r00      [10]   64 	ld	hl, #___str_1
   0017 E3            [19]   65 	ex	(sp),hl
   0018 CDr00r00      [17]   66 	call	_printf
                             67 ;src/main.c:40: printf("libraries  to  print out  byte sizes  of");
   001B 21rF0r00      [10]   68 	ld	hl, #___str_2
   001E E3            [19]   69 	ex	(sp),hl
   001F CDr00r00      [17]   70 	call	_printf
                             71 ;src/main.c:41: printf("standard  SDCC  types, using \017\002CPCtelera\017\001's");
   0022 21r19r01      [10]   72 	ld	hl, #___str_3
   0025 E3            [19]   73 	ex	(sp),hl
   0026 CDr00r00      [17]   74 	call	_printf
                             75 ;src/main.c:42: printf("convenient aliases.\n\r\n\r");
   0029 21r46r01      [10]   76 	ld	hl, #___str_4
   002C E3            [19]   77 	ex	(sp),hl
   002D CDr00r00      [17]   78 	call	_printf
                             79 ;src/main.c:43: printf("Size of \017\003 u8 \017\001=\017\002 %d \017\001byte\n\r", sizeof(u8));
   0030 21 01 00      [10]   80 	ld	hl, #0x0001
   0033 E3            [19]   81 	ex	(sp),hl
   0034 21r5Er01      [10]   82 	ld	hl, #___str_5
   0037 E5            [11]   83 	push	hl
   0038 CDr00r00      [17]   84 	call	_printf
   003B F1            [10]   85 	pop	af
                             86 ;src/main.c:44: printf("Size of \017\003u16 \017\001=\017\002 %d \017\001byte\n\r", sizeof(u16));
   003C 21 02 00      [10]   87 	ld	hl, #0x0002
   003F E3            [19]   88 	ex	(sp),hl
   0040 21r7Er01      [10]   89 	ld	hl, #___str_6
   0043 E5            [11]   90 	push	hl
   0044 CDr00r00      [17]   91 	call	_printf
   0047 F1            [10]   92 	pop	af
                             93 ;src/main.c:45: printf("Size of \017\003u32 \017\001=\017\002 %d \017\001byte\n\r", sizeof(u32));
   0048 21 04 00      [10]   94 	ld	hl, #0x0004
   004B E3            [19]   95 	ex	(sp),hl
   004C 21r9Er01      [10]   96 	ld	hl, #___str_7
   004F E5            [11]   97 	push	hl
   0050 CDr00r00      [17]   98 	call	_printf
   0053 F1            [10]   99 	pop	af
                            100 ;src/main.c:46: printf("Size of \017\003u64 \017\001=\017\002 %d \017\001byte\n\r", sizeof(u64));
   0054 21 08 00      [10]  101 	ld	hl, #0x0008
   0057 E3            [19]  102 	ex	(sp),hl
   0058 21rBEr01      [10]  103 	ld	hl, #___str_8
   005B E5            [11]  104 	push	hl
   005C CDr00r00      [17]  105 	call	_printf
   005F F1            [10]  106 	pop	af
                            107 ;src/main.c:47: printf("Size of \017\003 i8 \017\001=\017\002 %d \017\001byte\n\r", sizeof(i8));
   0060 21 01 00      [10]  108 	ld	hl, #0x0001
   0063 E3            [19]  109 	ex	(sp),hl
   0064 21rDEr01      [10]  110 	ld	hl, #___str_9
   0067 E5            [11]  111 	push	hl
   0068 CDr00r00      [17]  112 	call	_printf
   006B F1            [10]  113 	pop	af
                            114 ;src/main.c:48: printf("Size of \017\003i16 \017\001=\017\002 %d \017\001byte\n\r", sizeof(i16));
   006C 21 02 00      [10]  115 	ld	hl, #0x0002
   006F E3            [19]  116 	ex	(sp),hl
   0070 21rFEr01      [10]  117 	ld	hl, #___str_10
   0073 E5            [11]  118 	push	hl
   0074 CDr00r00      [17]  119 	call	_printf
   0077 F1            [10]  120 	pop	af
                            121 ;src/main.c:49: printf("Size of \017\003i32 \017\001=\017\002 %d \017\001byte\n\r", sizeof(i32));
   0078 21 04 00      [10]  122 	ld	hl, #0x0004
   007B E3            [19]  123 	ex	(sp),hl
   007C 21r1Er02      [10]  124 	ld	hl, #___str_11
   007F E5            [11]  125 	push	hl
   0080 CDr00r00      [17]  126 	call	_printf
   0083 F1            [10]  127 	pop	af
                            128 ;src/main.c:50: printf("Size of \017\003i64 \017\001=\017\002 %d \017\001byte\n\r", sizeof(i64));
   0084 21 08 00      [10]  129 	ld	hl, #0x0008
   0087 E3            [19]  130 	ex	(sp),hl
   0088 21r3Er02      [10]  131 	ld	hl, #___str_12
   008B E5            [11]  132 	push	hl
   008C CDr00r00      [17]  133 	call	_printf
   008F F1            [10]  134 	pop	af
                            135 ;src/main.c:51: printf("Size of \017\003f32 \017\001=\017\002 %d \017\001byte\n\r", sizeof(f32));
   0090 21 04 00      [10]  136 	ld	hl, #0x0004
   0093 E3            [19]  137 	ex	(sp),hl
   0094 21r5Er02      [10]  138 	ld	hl, #___str_13
   0097 E5            [11]  139 	push	hl
   0098 CDr00r00      [17]  140 	call	_printf
   009B F1            [10]  141 	pop	af
   009C F1            [10]  142 	pop	af
                            143 ;src/main.c:54: while (1);
   009D                     144 00102$:
   009D 18 FE         [12]  145 	jr	00102$
   009F                     146 ___str_0:
   009F 20 20 20 20 20 20   147 	.ascii "      "
   00A5 0F                  148 	.db 0x0f
   00A6 03                  149 	.db 0x03
   00A7 57 65 6C 63 6F 6D   150 	.ascii "Welcome to "
        65 20 74 6F 20
   00B2 0F                  151 	.db 0x0f
   00B3 02                  152 	.db 0x02
   00B4 43 50 43 74 65 6C   153 	.ascii "CPCtelera"
        65 72 61
   00BD 0F                  154 	.db 0x0f
   00BE 03                  155 	.db 0x03
   00BF 21                  156 	.ascii "!"
   00C0 0F                  157 	.db 0x0f
   00C1 01                  158 	.db 0x01
   00C2 0A                  159 	.db 0x0a
   00C3 0D                  160 	.db 0x0d
   00C4 0A                  161 	.db 0x0a
   00C5 0D                  162 	.db 0x0d
   00C6 00                  163 	.db 0x00
   00C7                     164 ___str_1:
   00C7 54 68 69 73 20 20   165 	.ascii "This  example  makes  use  of standard C"
        65 78 61 6D 70 6C
        65 20 20 6D 61 6B
        65 73 20 20 75 73
        65 20 20 6F 66 20
        73 74 61 6E 64 61
        72 64 20 43
   00EF 00                  166 	.db 0x00
   00F0                     167 ___str_2:
   00F0 6C 69 62 72 61 72   168 	.ascii "libraries  to  print out  byte sizes  of"
        69 65 73 20 20 74
        6F 20 20 70 72 69
        6E 74 20 6F 75 74
        20 20 62 79 74 65
        20 73 69 7A 65 73
        20 20 6F 66
   0118 00                  169 	.db 0x00
   0119                     170 ___str_3:
   0119 73 74 61 6E 64 61   171 	.ascii "standard  SDCC  types, using "
        72 64 20 20 53 44
        43 43 20 20 74 79
        70 65 73 2C 20 75
        73 69 6E 67 20
   0136 0F                  172 	.db 0x0f
   0137 02                  173 	.db 0x02
   0138 43 50 43 74 65 6C   174 	.ascii "CPCtelera"
        65 72 61
   0141 0F                  175 	.db 0x0f
   0142 01                  176 	.db 0x01
   0143 27 73               177 	.ascii "'s"
   0145 00                  178 	.db 0x00
   0146                     179 ___str_4:
   0146 63 6F 6E 76 65 6E   180 	.ascii "convenient aliases."
        69 65 6E 74 20 61
        6C 69 61 73 65 73
        2E
   0159 0A                  181 	.db 0x0a
   015A 0D                  182 	.db 0x0d
   015B 0A                  183 	.db 0x0a
   015C 0D                  184 	.db 0x0d
   015D 00                  185 	.db 0x00
   015E                     186 ___str_5:
   015E 53 69 7A 65 20 6F   187 	.ascii "Size of "
        66 20
   0166 0F                  188 	.db 0x0f
   0167 03                  189 	.db 0x03
   0168 20 75 38 20         190 	.ascii " u8 "
   016C 0F                  191 	.db 0x0f
   016D 01                  192 	.db 0x01
   016E 3D                  193 	.ascii "="
   016F 0F                  194 	.db 0x0f
   0170 02                  195 	.db 0x02
   0171 20 25 64 20         196 	.ascii " %d "
   0175 0F                  197 	.db 0x0f
   0176 01                  198 	.db 0x01
   0177 62 79 74 65         199 	.ascii "byte"
   017B 0A                  200 	.db 0x0a
   017C 0D                  201 	.db 0x0d
   017D 00                  202 	.db 0x00
   017E                     203 ___str_6:
   017E 53 69 7A 65 20 6F   204 	.ascii "Size of "
        66 20
   0186 0F                  205 	.db 0x0f
   0187 03                  206 	.db 0x03
   0188 75 31 36 20         207 	.ascii "u16 "
   018C 0F                  208 	.db 0x0f
   018D 01                  209 	.db 0x01
   018E 3D                  210 	.ascii "="
   018F 0F                  211 	.db 0x0f
   0190 02                  212 	.db 0x02
   0191 20 25 64 20         213 	.ascii " %d "
   0195 0F                  214 	.db 0x0f
   0196 01                  215 	.db 0x01
   0197 62 79 74 65         216 	.ascii "byte"
   019B 0A                  217 	.db 0x0a
   019C 0D                  218 	.db 0x0d
   019D 00                  219 	.db 0x00
   019E                     220 ___str_7:
   019E 53 69 7A 65 20 6F   221 	.ascii "Size of "
        66 20
   01A6 0F                  222 	.db 0x0f
   01A7 03                  223 	.db 0x03
   01A8 75 33 32 20         224 	.ascii "u32 "
   01AC 0F                  225 	.db 0x0f
   01AD 01                  226 	.db 0x01
   01AE 3D                  227 	.ascii "="
   01AF 0F                  228 	.db 0x0f
   01B0 02                  229 	.db 0x02
   01B1 20 25 64 20         230 	.ascii " %d "
   01B5 0F                  231 	.db 0x0f
   01B6 01                  232 	.db 0x01
   01B7 62 79 74 65         233 	.ascii "byte"
   01BB 0A                  234 	.db 0x0a
   01BC 0D                  235 	.db 0x0d
   01BD 00                  236 	.db 0x00
   01BE                     237 ___str_8:
   01BE 53 69 7A 65 20 6F   238 	.ascii "Size of "
        66 20
   01C6 0F                  239 	.db 0x0f
   01C7 03                  240 	.db 0x03
   01C8 75 36 34 20         241 	.ascii "u64 "
   01CC 0F                  242 	.db 0x0f
   01CD 01                  243 	.db 0x01
   01CE 3D                  244 	.ascii "="
   01CF 0F                  245 	.db 0x0f
   01D0 02                  246 	.db 0x02
   01D1 20 25 64 20         247 	.ascii " %d "
   01D5 0F                  248 	.db 0x0f
   01D6 01                  249 	.db 0x01
   01D7 62 79 74 65         250 	.ascii "byte"
   01DB 0A                  251 	.db 0x0a
   01DC 0D                  252 	.db 0x0d
   01DD 00                  253 	.db 0x00
   01DE                     254 ___str_9:
   01DE 53 69 7A 65 20 6F   255 	.ascii "Size of "
        66 20
   01E6 0F                  256 	.db 0x0f
   01E7 03                  257 	.db 0x03
   01E8 20 69 38 20         258 	.ascii " i8 "
   01EC 0F                  259 	.db 0x0f
   01ED 01                  260 	.db 0x01
   01EE 3D                  261 	.ascii "="
   01EF 0F                  262 	.db 0x0f
   01F0 02                  263 	.db 0x02
   01F1 20 25 64 20         264 	.ascii " %d "
   01F5 0F                  265 	.db 0x0f
   01F6 01                  266 	.db 0x01
   01F7 62 79 74 65         267 	.ascii "byte"
   01FB 0A                  268 	.db 0x0a
   01FC 0D                  269 	.db 0x0d
   01FD 00                  270 	.db 0x00
   01FE                     271 ___str_10:
   01FE 53 69 7A 65 20 6F   272 	.ascii "Size of "
        66 20
   0206 0F                  273 	.db 0x0f
   0207 03                  274 	.db 0x03
   0208 69 31 36 20         275 	.ascii "i16 "
   020C 0F                  276 	.db 0x0f
   020D 01                  277 	.db 0x01
   020E 3D                  278 	.ascii "="
   020F 0F                  279 	.db 0x0f
   0210 02                  280 	.db 0x02
   0211 20 25 64 20         281 	.ascii " %d "
   0215 0F                  282 	.db 0x0f
   0216 01                  283 	.db 0x01
   0217 62 79 74 65         284 	.ascii "byte"
   021B 0A                  285 	.db 0x0a
   021C 0D                  286 	.db 0x0d
   021D 00                  287 	.db 0x00
   021E                     288 ___str_11:
   021E 53 69 7A 65 20 6F   289 	.ascii "Size of "
        66 20
   0226 0F                  290 	.db 0x0f
   0227 03                  291 	.db 0x03
   0228 69 33 32 20         292 	.ascii "i32 "
   022C 0F                  293 	.db 0x0f
   022D 01                  294 	.db 0x01
   022E 3D                  295 	.ascii "="
   022F 0F                  296 	.db 0x0f
   0230 02                  297 	.db 0x02
   0231 20 25 64 20         298 	.ascii " %d "
   0235 0F                  299 	.db 0x0f
   0236 01                  300 	.db 0x01
   0237 62 79 74 65         301 	.ascii "byte"
   023B 0A                  302 	.db 0x0a
   023C 0D                  303 	.db 0x0d
   023D 00                  304 	.db 0x00
   023E                     305 ___str_12:
   023E 53 69 7A 65 20 6F   306 	.ascii "Size of "
        66 20
   0246 0F                  307 	.db 0x0f
   0247 03                  308 	.db 0x03
   0248 69 36 34 20         309 	.ascii "i64 "
   024C 0F                  310 	.db 0x0f
   024D 01                  311 	.db 0x01
   024E 3D                  312 	.ascii "="
   024F 0F                  313 	.db 0x0f
   0250 02                  314 	.db 0x02
   0251 20 25 64 20         315 	.ascii " %d "
   0255 0F                  316 	.db 0x0f
   0256 01                  317 	.db 0x01
   0257 62 79 74 65         318 	.ascii "byte"
   025B 0A                  319 	.db 0x0a
   025C 0D                  320 	.db 0x0d
   025D 00                  321 	.db 0x00
   025E                     322 ___str_13:
   025E 53 69 7A 65 20 6F   323 	.ascii "Size of "
        66 20
   0266 0F                  324 	.db 0x0f
   0267 03                  325 	.db 0x03
   0268 66 33 32 20         326 	.ascii "f32 "
   026C 0F                  327 	.db 0x0f
   026D 01                  328 	.db 0x01
   026E 3D                  329 	.ascii "="
   026F 0F                  330 	.db 0x0f
   0270 02                  331 	.db 0x02
   0271 20 25 64 20         332 	.ascii " %d "
   0275 0F                  333 	.db 0x0f
   0276 01                  334 	.db 0x01
   0277 62 79 74 65         335 	.ascii "byte"
   027B 0A                  336 	.db 0x0a
   027C 0D                  337 	.db 0x0d
   027D 00                  338 	.db 0x00
                            339 	.area _CODE
                            340 	.area _INITIALIZER
                            341 	.area _CABS (ABS)
