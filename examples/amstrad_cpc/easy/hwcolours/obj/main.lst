                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _printf
                             13 	.globl _cpct_getHWColour
                             14 	.globl _cpct_memset
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;src/main.c:26: void main(void) {
                             47 ;	---------------------------------
                             48 ; Function main
                             49 ; ---------------------------------
   0000                      50 _main::
                             51 ;src/main.c:30: cpct_clearScreen(0);
   0000 21 00 40      [10]   52 	ld	hl, #0x4000
   0003 E5            [11]   53 	push	hl
   0004 AF            [ 4]   54 	xor	a, a
   0005 F5            [11]   55 	push	af
   0006 33            [ 6]   56 	inc	sp
   0007 26 C0         [ 7]   57 	ld	h, #0xc0
   0009 E5            [11]   58 	push	hl
   000A CDr00r00      [17]   59 	call	_cpct_memset
                             60 ;src/main.c:40: printf("        \017\003Hardware Colour values\017\002          ");
   000D 21r8Er00      [10]   61 	ld	hl, #___str_0
   0010 E5            [11]   62 	push	hl
   0011 CDr00r00      [17]   63 	call	_printf
                             64 ;src/main.c:41: printf("This example shows the  equivalence between firmware co-");
   0014 21rBBr00      [10]   65 	ld	hl, #___str_1
   0017 E3            [19]   66 	ex	(sp),hl
   0018 CDr00r00      [17]   67 	call	_printf
                             68 ;src/main.c:42: printf("lour  values  and harwdware  colour values. \017\003CPCtelera\017\002's ");
   001B 21rF4r00      [10]   69 	ld	hl, #___str_2
   001E E3            [19]   70 	ex	(sp),hl
   001F CDr00r00      [17]   71 	call	_printf
                             72 ;src/main.c:43: printf("functions that change colours use hardware ones.\n\r\n\r");
   0022 21r31r01      [10]   73 	ld	hl, #___str_3
   0025 E3            [19]   74 	ex	(sp),hl
   0026 CDr00r00      [17]   75 	call	_printf
                             76 ;src/main.c:44: printf("   \017\003==================================\n\r");
   0029 21r66r01      [10]   77 	ld	hl, #___str_4
   002C E3            [19]   78 	ex	(sp),hl
   002D CDr00r00      [17]   79 	call	_printf
                             80 ;src/main.c:45: printf("   || \017\002FIRM -- HARD \017\003|| \017\002FIRM -- HARD \017\003||\n\r");
   0030 21r90r01      [10]   81 	ld	hl, #___str_5
   0033 E3            [19]   82 	ex	(sp),hl
   0034 CDr00r00      [17]   83 	call	_printf
                             84 ;src/main.c:46: printf("   ==================================\n\r");
   0037 21rC0r01      [10]   85 	ld	hl, #___str_6
   003A E3            [19]   86 	ex	(sp),hl
   003B CDr00r00      [17]   87 	call	_printf
   003E F1            [10]   88 	pop	af
                             89 ;src/main.c:47: for (i=0; i < 13; ++i) {
   003F 0E 00         [ 7]   90 	ld	c, #0x00
   0041                      91 00105$:
                             92 ;src/main.c:48: printf("   \017\003||  \017\001%2d  \017\003--  \017\001%2d\017\003  ",       i, cpct_getHWColour(i));
   0041 69            [ 4]   93 	ld	l, c
   0042 26 00         [ 7]   94 	ld	h, #0x00
   0044 C5            [11]   95 	push	bc
   0045 CDr00r00      [17]   96 	call	_cpct_getHWColour
   0048 C1            [10]   97 	pop	bc
   0049 26 00         [ 7]   98 	ld	h, #0x00
   004B 59            [ 4]   99 	ld	e, c
   004C 16 00         [ 7]  100 	ld	d, #0x00
   004E C5            [11]  101 	push	bc
   004F D5            [11]  102 	push	de
   0050 E5            [11]  103 	push	hl
   0051 D5            [11]  104 	push	de
   0052 21rE8r01      [10]  105 	ld	hl, #___str_7
   0055 E5            [11]  106 	push	hl
   0056 CDr00r00      [17]  107 	call	_printf
   0059 21 06 00      [10]  108 	ld	hl, #6
   005C 39            [11]  109 	add	hl, sp
   005D F9            [ 6]  110 	ld	sp, hl
   005E D1            [10]  111 	pop	de
   005F C1            [10]  112 	pop	bc
                            113 ;src/main.c:49: printf("\017\003||  \017\001%2d  \017\003--  \017\001%2d\017\003  ||\n\r", i+13, cpct_getHWColour(i+13));
   0060 21 0D 00      [10]  114 	ld	hl, #0x000d
   0063 19            [11]  115 	add	hl, de
   0064 E5            [11]  116 	push	hl
   0065 C5            [11]  117 	push	bc
   0066 CDr00r00      [17]  118 	call	_cpct_getHWColour
   0069 5D            [ 4]  119 	ld	e, l
   006A C1            [10]  120 	pop	bc
   006B E1            [10]  121 	pop	hl
   006C 16 00         [ 7]  122 	ld	d, #0x00
   006E C5            [11]  123 	push	bc
   006F D5            [11]  124 	push	de
   0070 E5            [11]  125 	push	hl
   0071 21r08r02      [10]  126 	ld	hl, #___str_8
   0074 E5            [11]  127 	push	hl
   0075 CDr00r00      [17]  128 	call	_printf
   0078 21 06 00      [10]  129 	ld	hl, #6
   007B 39            [11]  130 	add	hl, sp
   007C F9            [ 6]  131 	ld	sp, hl
   007D C1            [10]  132 	pop	bc
                            133 ;src/main.c:47: for (i=0; i < 13; ++i) {
   007E 0C            [ 4]  134 	inc	c
   007F 79            [ 4]  135 	ld	a, c
   0080 D6 0D         [ 7]  136 	sub	a, #0x0d
   0082 38 BD         [12]  137 	jr	C,00105$
                            138 ;src/main.c:51: printf("   ==================================\n\r");
   0084 21rC0r01      [10]  139 	ld	hl, #___str_6
   0087 E5            [11]  140 	push	hl
   0088 CDr00r00      [17]  141 	call	_printf
   008B F1            [10]  142 	pop	af
                            143 ;src/main.c:54: while (1);
   008C                     144 00103$:
   008C 18 FE         [12]  145 	jr	00103$
   008E                     146 ___str_0:
   008E 20 20 20 20 20 20   147 	.ascii "        "
        20 20
   0096 0F                  148 	.db 0x0f
   0097 03                  149 	.db 0x03
   0098 48 61 72 64 77 61   150 	.ascii "Hardware Colour values"
        72 65 20 43 6F 6C
        6F 75 72 20 76 61
        6C 75 65 73
   00AE 0F                  151 	.db 0x0f
   00AF 02                  152 	.db 0x02
   00B0 20 20 20 20 20 20   153 	.ascii "          "
        20 20 20 20
   00BA 00                  154 	.db 0x00
   00BB                     155 ___str_1:
   00BB 54 68 69 73 20 65   156 	.ascii "This example shows the  equivalence between firmware co-"
        78 61 6D 70 6C 65
        20 73 68 6F 77 73
        20 74 68 65 20 20
        65 71 75 69 76 61
        6C 65 6E 63 65 20
        62 65 74 77 65 65
        6E 20 66 69 72 6D
        77 61 72 65 20 63
        6F 2D
   00F3 00                  157 	.db 0x00
   00F4                     158 ___str_2:
   00F4 6C 6F 75 72 20 20   159 	.ascii "lour  values  and harwdware  colour values. "
        76 61 6C 75 65 73
        20 20 61 6E 64 20
        68 61 72 77 64 77
        61 72 65 20 20 63
        6F 6C 6F 75 72 20
        76 61 6C 75 65 73
        2E 20
   0120 0F                  160 	.db 0x0f
   0121 03                  161 	.db 0x03
   0122 43 50 43 74 65 6C   162 	.ascii "CPCtelera"
        65 72 61
   012B 0F                  163 	.db 0x0f
   012C 02                  164 	.db 0x02
   012D 27 73 20            165 	.ascii "'s "
   0130 00                  166 	.db 0x00
   0131                     167 ___str_3:
   0131 66 75 6E 63 74 69   168 	.ascii "functions that change colours use hardware ones."
        6F 6E 73 20 74 68
        61 74 20 63 68 61
        6E 67 65 20 63 6F
        6C 6F 75 72 73 20
        75 73 65 20 68 61
        72 64 77 61 72 65
        20 6F 6E 65 73 2E
   0161 0A                  169 	.db 0x0a
   0162 0D                  170 	.db 0x0d
   0163 0A                  171 	.db 0x0a
   0164 0D                  172 	.db 0x0d
   0165 00                  173 	.db 0x00
   0166                     174 ___str_4:
   0166 20 20 20            175 	.ascii "   "
   0169 0F                  176 	.db 0x0f
   016A 03                  177 	.db 0x03
   016B 3D 3D 3D 3D 3D 3D   178 	.ascii "=================================="
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D
   018D 0A                  179 	.db 0x0a
   018E 0D                  180 	.db 0x0d
   018F 00                  181 	.db 0x00
   0190                     182 ___str_5:
   0190 20 20 20 7C 7C 20   183 	.ascii "   || "
   0196 0F                  184 	.db 0x0f
   0197 02                  185 	.db 0x02
   0198 46 49 52 4D 20 2D   186 	.ascii "FIRM -- HARD "
        2D 20 48 41 52 44
        20
   01A5 0F                  187 	.db 0x0f
   01A6 03                  188 	.db 0x03
   01A7 7C 7C 20            189 	.ascii "|| "
   01AA 0F                  190 	.db 0x0f
   01AB 02                  191 	.db 0x02
   01AC 46 49 52 4D 20 2D   192 	.ascii "FIRM -- HARD "
        2D 20 48 41 52 44
        20
   01B9 0F                  193 	.db 0x0f
   01BA 03                  194 	.db 0x03
   01BB 7C 7C               195 	.ascii "||"
   01BD 0A                  196 	.db 0x0a
   01BE 0D                  197 	.db 0x0d
   01BF 00                  198 	.db 0x00
   01C0                     199 ___str_6:
   01C0 20 20 20 3D 3D 3D   200 	.ascii "   =================================="
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D 3D 3D 3D 3D 3D
        3D
   01E5 0A                  201 	.db 0x0a
   01E6 0D                  202 	.db 0x0d
   01E7 00                  203 	.db 0x00
   01E8                     204 ___str_7:
   01E8 20 20 20            205 	.ascii "   "
   01EB 0F                  206 	.db 0x0f
   01EC 03                  207 	.db 0x03
   01ED 7C 7C 20 20         208 	.ascii "||  "
   01F1 0F                  209 	.db 0x0f
   01F2 01                  210 	.db 0x01
   01F3 25 32 64 20 20      211 	.ascii "%2d  "
   01F8 0F                  212 	.db 0x0f
   01F9 03                  213 	.db 0x03
   01FA 2D 2D 20 20         214 	.ascii "--  "
   01FE 0F                  215 	.db 0x0f
   01FF 01                  216 	.db 0x01
   0200 25 32 64            217 	.ascii "%2d"
   0203 0F                  218 	.db 0x0f
   0204 03                  219 	.db 0x03
   0205 20 20               220 	.ascii "  "
   0207 00                  221 	.db 0x00
   0208                     222 ___str_8:
   0208 0F                  223 	.db 0x0f
   0209 03                  224 	.db 0x03
   020A 7C 7C 20 20         225 	.ascii "||  "
   020E 0F                  226 	.db 0x0f
   020F 01                  227 	.db 0x01
   0210 25 32 64 20 20      228 	.ascii "%2d  "
   0215 0F                  229 	.db 0x0f
   0216 03                  230 	.db 0x03
   0217 2D 2D 20 20         231 	.ascii "--  "
   021B 0F                  232 	.db 0x0f
   021C 01                  233 	.db 0x01
   021D 25 32 64            234 	.ascii "%2d"
   0220 0F                  235 	.db 0x0f
   0221 03                  236 	.db 0x03
   0222 20 20 7C 7C         237 	.ascii "  ||"
   0226 0A                  238 	.db 0x0a
   0227 0D                  239 	.db 0x0d
   0228 00                  240 	.db 0x00
                            241 	.area _CODE
                            242 	.area _INITIALIZER
                            243 	.area _CABS (ABS)
